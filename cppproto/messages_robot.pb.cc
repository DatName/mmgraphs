// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_robot.proto

#include "messages_robot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_5fgeneric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fgeneric_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageHeader;
}  // namespace protobuf_messages_5fgeneric_2eproto
namespace protobuf_messages_5frobot_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5frobot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountBody;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5frobot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PullMarkets_MessageBody;
}  // namespace protobuf_messages_5frobot_2eproto
namespace protobuf_order_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_order_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CancelOrder;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_order_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NewOrder;
}  // namespace protobuf_order_2eproto
namespace models {
class AccountBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountBody>
      _instance;
} _AccountBody_default_instance_;
class PushLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushLogin>
      _instance;
} _PushLogin_default_instance_;
class PushOrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushOrder>
      _instance;
} _PushOrder_default_instance_;
class PushCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushCancel>
      _instance;
} _PushCancel_default_instance_;
class PushCancelAllDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushCancelAll>
      _instance;
} _PushCancelAll_default_instance_;
class PullOrdersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullOrders>
      _instance;
} _PullOrders_default_instance_;
class PullBalancesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullBalances>
      _instance;
} _PullBalances_default_instance_;
class PullMarkets_MessageBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullMarkets_MessageBody>
      _instance;
} _PullMarkets_MessageBody_default_instance_;
class PullMarketsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullMarkets>
      _instance;
} _PullMarkets_default_instance_;
}  // namespace models
namespace protobuf_messages_5frobot_2eproto {
static void InitDefaultsAccountBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_AccountBody_default_instance_;
    new (ptr) ::models::AccountBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::AccountBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountBody}, {}};

static void InitDefaultsPushLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushLogin_default_instance_;
    new (ptr) ::models::PushLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PushLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PushLogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPushLogin}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5frobot_2eproto::scc_info_AccountBody.base,}};

static void InitDefaultsPushOrder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushOrder_default_instance_;
    new (ptr) ::models::PushOrder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PushOrder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PushOrder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPushOrder}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_order_2eproto::scc_info_NewOrder.base,}};

static void InitDefaultsPushCancel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushCancel_default_instance_;
    new (ptr) ::models::PushCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PushCancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PushCancel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPushCancel}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_order_2eproto::scc_info_CancelOrder.base,}};

static void InitDefaultsPushCancelAll() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushCancelAll_default_instance_;
    new (ptr) ::models::PushCancelAll();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PushCancelAll::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PushCancelAll =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPushCancelAll}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5frobot_2eproto::scc_info_AccountBody.base,}};

static void InitDefaultsPullOrders() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullOrders_default_instance_;
    new (ptr) ::models::PullOrders();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullOrders::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PullOrders =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPullOrders}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5frobot_2eproto::scc_info_AccountBody.base,}};

static void InitDefaultsPullBalances() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullBalances_default_instance_;
    new (ptr) ::models::PullBalances();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullBalances::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PullBalances =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPullBalances}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5frobot_2eproto::scc_info_AccountBody.base,}};

static void InitDefaultsPullMarkets_MessageBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullMarkets_MessageBody_default_instance_;
    new (ptr) ::models::PullMarkets_MessageBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullMarkets_MessageBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PullMarkets_MessageBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPullMarkets_MessageBody}, {}};

static void InitDefaultsPullMarkets() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullMarkets_default_instance_;
    new (ptr) ::models::PullMarkets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullMarkets::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PullMarkets =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPullMarkets}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5frobot_2eproto::scc_info_PullMarkets_MessageBody.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AccountBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushLogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushOrder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushCancel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushCancelAll.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullOrders.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullBalances.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullMarkets_MessageBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullMarkets.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::AccountBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::AccountBody, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::AccountBody, exchange_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLogin, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLogin, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushOrder, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushOrder, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushCancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushCancel, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushCancel, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushCancelAll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushCancelAll, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushCancelAll, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullOrders, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullOrders, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullOrders, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullBalances, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullBalances, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullBalances, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarkets_MessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarkets_MessageBody, exchange_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarkets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarkets, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarkets, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::models::AccountBody)},
  { 7, -1, sizeof(::models::PushLogin)},
  { 14, -1, sizeof(::models::PushOrder)},
  { 21, -1, sizeof(::models::PushCancel)},
  { 28, -1, sizeof(::models::PushCancelAll)},
  { 35, -1, sizeof(::models::PullOrders)},
  { 42, -1, sizeof(::models::PullBalances)},
  { 49, -1, sizeof(::models::PullMarkets_MessageBody)},
  { 55, -1, sizeof(::models::PullMarkets)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_AccountBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushOrder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushCancel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushCancelAll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullOrders_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullBalances_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullMarkets_MessageBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullMarkets_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages_robot.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024messages_robot.proto\022\006models\032\026messages"
      "_generic.proto\032\013order.proto\".\n\013AccountBo"
      "dy\022\r\n\005Alias\030\001 \001(\t\022\020\n\010Exchange\030\003 \001(\t\"U\n\tP"
      "ushLogin\022%\n\006Header\030\001 \001(\0132\025.models.Messag"
      "eHeader\022!\n\004Body\030\002 \001(\0132\023.models.AccountBo"
      "dy\"R\n\tPushOrder\022%\n\006Header\030\001 \001(\0132\025.models"
      ".MessageHeader\022\036\n\004Body\030\002 \001(\0132\020.models.Ne"
      "wOrder\"V\n\nPushCancel\022%\n\006Header\030\001 \001(\0132\025.m"
      "odels.MessageHeader\022!\n\004Body\030\002 \001(\0132\023.mode"
      "ls.CancelOrder\"Y\n\rPushCancelAll\022%\n\006Heade"
      "r\030\001 \001(\0132\025.models.MessageHeader\022!\n\004Body\030\002"
      " \001(\0132\023.models.AccountBody\"V\n\nPullOrders\022"
      "%\n\006Header\030\001 \001(\0132\025.models.MessageHeader\022!"
      "\n\004Body\030\002 \001(\0132\023.models.AccountBody\"X\n\014Pul"
      "lBalances\022%\n\006Header\030\001 \001(\0132\025.models.Messa"
      "geHeader\022!\n\004Body\030\002 \001(\0132\023.models.AccountB"
      "ody\"\204\001\n\013PullMarkets\022%\n\006Header\030\001 \001(\0132\025.mo"
      "dels.MessageHeader\022-\n\004Body\030\002 \001(\0132\037.model"
      "s.PullMarkets.MessageBody\032\037\n\013MessageBody"
      "\022\020\n\010Exchange\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 786);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_robot.proto", &protobuf_RegisterTypes);
  ::protobuf_messages_5fgeneric_2eproto::AddDescriptors();
  ::protobuf_order_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_5frobot_2eproto
namespace models {

// ===================================================================

void AccountBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountBody::kAliasFieldNumber;
const int AccountBody::kExchangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountBody::AccountBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_AccountBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.AccountBody)
}
AccountBody::AccountBody(const AccountBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange().size() > 0) {
    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  // @@protoc_insertion_point(copy_constructor:models.AccountBody)
}

void AccountBody::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountBody::~AccountBody() {
  // @@protoc_insertion_point(destructor:models.AccountBody)
  SharedDtor();
}

void AccountBody::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountBody::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountBody& AccountBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_AccountBody.base);
  return *internal_default_instance();
}


void AccountBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.AccountBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AccountBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.AccountBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.AccountBody.Alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Exchange = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), static_cast<int>(this->exchange().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.AccountBody.Exchange"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.AccountBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.AccountBody)
  return false;
#undef DO_
}

void AccountBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.AccountBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Alias = 1;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.AccountBody.Alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->alias(), output);
  }

  // string Exchange = 3;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.AccountBody.Exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchange(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.AccountBody)
}

::google::protobuf::uint8* AccountBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.AccountBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Alias = 1;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.AccountBody.Alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->alias(), target);
  }

  // string Exchange = 3;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.AccountBody.Exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchange(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.AccountBody)
  return target;
}

size_t AccountBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.AccountBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Alias = 1;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // string Exchange = 3;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.AccountBody)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.AccountBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.AccountBody)
    MergeFrom(*source);
  }
}

void AccountBody::MergeFrom(const AccountBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.AccountBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
}

void AccountBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.AccountBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountBody::CopyFrom(const AccountBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.AccountBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountBody::IsInitialized() const {
  return true;
}

void AccountBody::Swap(AccountBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountBody::InternalSwap(AccountBody* other) {
  using std::swap;
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_.Swap(&other->exchange_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountBody::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushLogin::InitAsDefaultInstance() {
  ::models::_PushLogin_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PushLogin_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::AccountBody*>(
      ::models::AccountBody::internal_default_instance());
}
void PushLogin::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushLogin::kHeaderFieldNumber;
const int PushLogin::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushLogin::PushLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PushLogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PushLogin)
}
PushLogin::PushLogin(const PushLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::AccountBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PushLogin)
}

void PushLogin::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PushLogin::~PushLogin() {
  // @@protoc_insertion_point(destructor:models.PushLogin)
  SharedDtor();
}

void PushLogin::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PushLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushLogin::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushLogin& PushLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PushLogin.base);
  return *internal_default_instance();
}


void PushLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PushLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PushLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PushLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.AccountBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PushLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PushLogin)
  return false;
#undef DO_
}

void PushLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PushLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PushLogin)
}

::google::protobuf::uint8* PushLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PushLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PushLogin)
  return target;
}

size_t PushLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PushLogin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PushLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const PushLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PushLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PushLogin)
    MergeFrom(*source);
  }
}

void PushLogin::MergeFrom(const PushLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PushLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::AccountBody::MergeFrom(from.body());
  }
}

void PushLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PushLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushLogin::CopyFrom(const PushLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PushLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushLogin::IsInitialized() const {
  return true;
}

void PushLogin::Swap(PushLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushLogin::InternalSwap(PushLogin* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushLogin::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushOrder::InitAsDefaultInstance() {
  ::models::_PushOrder_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PushOrder_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::NewOrder*>(
      ::models::NewOrder::internal_default_instance());
}
void PushOrder::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void PushOrder::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushOrder::kHeaderFieldNumber;
const int PushOrder::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushOrder::PushOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PushOrder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PushOrder)
}
PushOrder::PushOrder(const PushOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::NewOrder(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PushOrder)
}

void PushOrder::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PushOrder::~PushOrder() {
  // @@protoc_insertion_point(destructor:models.PushOrder)
  SharedDtor();
}

void PushOrder::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PushOrder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushOrder::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushOrder& PushOrder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PushOrder.base);
  return *internal_default_instance();
}


void PushOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PushOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PushOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PushOrder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.NewOrder Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PushOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PushOrder)
  return false;
#undef DO_
}

void PushOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PushOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.NewOrder Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PushOrder)
}

::google::protobuf::uint8* PushOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PushOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.NewOrder Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PushOrder)
  return target;
}

size_t PushOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PushOrder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.NewOrder Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PushOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const PushOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PushOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PushOrder)
    MergeFrom(*source);
  }
}

void PushOrder::MergeFrom(const PushOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PushOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::NewOrder::MergeFrom(from.body());
  }
}

void PushOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PushOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushOrder::CopyFrom(const PushOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PushOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushOrder::IsInitialized() const {
  return true;
}

void PushOrder::Swap(PushOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushOrder::InternalSwap(PushOrder* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushOrder::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushCancel::InitAsDefaultInstance() {
  ::models::_PushCancel_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PushCancel_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::CancelOrder*>(
      ::models::CancelOrder::internal_default_instance());
}
void PushCancel::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void PushCancel::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushCancel::kHeaderFieldNumber;
const int PushCancel::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushCancel::PushCancel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PushCancel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PushCancel)
}
PushCancel::PushCancel(const PushCancel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::CancelOrder(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PushCancel)
}

void PushCancel::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PushCancel::~PushCancel() {
  // @@protoc_insertion_point(destructor:models.PushCancel)
  SharedDtor();
}

void PushCancel::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PushCancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushCancel::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushCancel& PushCancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PushCancel.base);
  return *internal_default_instance();
}


void PushCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PushCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PushCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PushCancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.CancelOrder Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PushCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PushCancel)
  return false;
#undef DO_
}

void PushCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PushCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.CancelOrder Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PushCancel)
}

::google::protobuf::uint8* PushCancel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PushCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.CancelOrder Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PushCancel)
  return target;
}

size_t PushCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PushCancel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.CancelOrder Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushCancel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PushCancel)
  GOOGLE_DCHECK_NE(&from, this);
  const PushCancel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushCancel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PushCancel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PushCancel)
    MergeFrom(*source);
  }
}

void PushCancel::MergeFrom(const PushCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PushCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::CancelOrder::MergeFrom(from.body());
  }
}

void PushCancel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PushCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushCancel::CopyFrom(const PushCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PushCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushCancel::IsInitialized() const {
  return true;
}

void PushCancel::Swap(PushCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushCancel::InternalSwap(PushCancel* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushCancel::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushCancelAll::InitAsDefaultInstance() {
  ::models::_PushCancelAll_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PushCancelAll_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::AccountBody*>(
      ::models::AccountBody::internal_default_instance());
}
void PushCancelAll::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushCancelAll::kHeaderFieldNumber;
const int PushCancelAll::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushCancelAll::PushCancelAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PushCancelAll.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PushCancelAll)
}
PushCancelAll::PushCancelAll(const PushCancelAll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::AccountBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PushCancelAll)
}

void PushCancelAll::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PushCancelAll::~PushCancelAll() {
  // @@protoc_insertion_point(destructor:models.PushCancelAll)
  SharedDtor();
}

void PushCancelAll::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PushCancelAll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushCancelAll::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushCancelAll& PushCancelAll::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PushCancelAll.base);
  return *internal_default_instance();
}


void PushCancelAll::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PushCancelAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PushCancelAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PushCancelAll)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.AccountBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PushCancelAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PushCancelAll)
  return false;
#undef DO_
}

void PushCancelAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PushCancelAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PushCancelAll)
}

::google::protobuf::uint8* PushCancelAll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PushCancelAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PushCancelAll)
  return target;
}

size_t PushCancelAll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PushCancelAll)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushCancelAll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PushCancelAll)
  GOOGLE_DCHECK_NE(&from, this);
  const PushCancelAll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushCancelAll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PushCancelAll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PushCancelAll)
    MergeFrom(*source);
  }
}

void PushCancelAll::MergeFrom(const PushCancelAll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PushCancelAll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::AccountBody::MergeFrom(from.body());
  }
}

void PushCancelAll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PushCancelAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushCancelAll::CopyFrom(const PushCancelAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PushCancelAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushCancelAll::IsInitialized() const {
  return true;
}

void PushCancelAll::Swap(PushCancelAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushCancelAll::InternalSwap(PushCancelAll* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushCancelAll::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullOrders::InitAsDefaultInstance() {
  ::models::_PullOrders_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PullOrders_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::AccountBody*>(
      ::models::AccountBody::internal_default_instance());
}
void PullOrders::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullOrders::kHeaderFieldNumber;
const int PullOrders::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullOrders::PullOrders()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PullOrders.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullOrders)
}
PullOrders::PullOrders(const PullOrders& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::AccountBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PullOrders)
}

void PullOrders::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PullOrders::~PullOrders() {
  // @@protoc_insertion_point(destructor:models.PullOrders)
  SharedDtor();
}

void PullOrders::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PullOrders::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullOrders::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullOrders& PullOrders::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PullOrders.base);
  return *internal_default_instance();
}


void PullOrders::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullOrders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PullOrders::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullOrders)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.AccountBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullOrders)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullOrders)
  return false;
#undef DO_
}

void PullOrders::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullOrders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullOrders)
}

::google::protobuf::uint8* PullOrders::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullOrders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullOrders)
  return target;
}

size_t PullOrders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullOrders)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullOrders::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullOrders)
  GOOGLE_DCHECK_NE(&from, this);
  const PullOrders* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullOrders>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullOrders)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullOrders)
    MergeFrom(*source);
  }
}

void PullOrders::MergeFrom(const PullOrders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullOrders)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::AccountBody::MergeFrom(from.body());
  }
}

void PullOrders::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullOrders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullOrders::CopyFrom(const PullOrders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullOrders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullOrders::IsInitialized() const {
  return true;
}

void PullOrders::Swap(PullOrders* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullOrders::InternalSwap(PullOrders* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullOrders::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullBalances::InitAsDefaultInstance() {
  ::models::_PullBalances_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PullBalances_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::AccountBody*>(
      ::models::AccountBody::internal_default_instance());
}
void PullBalances::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullBalances::kHeaderFieldNumber;
const int PullBalances::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullBalances::PullBalances()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PullBalances.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullBalances)
}
PullBalances::PullBalances(const PullBalances& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::AccountBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PullBalances)
}

void PullBalances::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PullBalances::~PullBalances() {
  // @@protoc_insertion_point(destructor:models.PullBalances)
  SharedDtor();
}

void PullBalances::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PullBalances::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullBalances::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullBalances& PullBalances::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PullBalances.base);
  return *internal_default_instance();
}


void PullBalances::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullBalances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PullBalances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullBalances)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.AccountBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullBalances)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullBalances)
  return false;
#undef DO_
}

void PullBalances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullBalances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullBalances)
}

::google::protobuf::uint8* PullBalances::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullBalances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullBalances)
  return target;
}

size_t PullBalances::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullBalances)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.AccountBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullBalances::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullBalances)
  GOOGLE_DCHECK_NE(&from, this);
  const PullBalances* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullBalances>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullBalances)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullBalances)
    MergeFrom(*source);
  }
}

void PullBalances::MergeFrom(const PullBalances& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullBalances)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::AccountBody::MergeFrom(from.body());
  }
}

void PullBalances::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullBalances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullBalances::CopyFrom(const PullBalances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullBalances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullBalances::IsInitialized() const {
  return true;
}

void PullBalances::Swap(PullBalances* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullBalances::InternalSwap(PullBalances* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullBalances::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullMarkets_MessageBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullMarkets_MessageBody::kExchangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullMarkets_MessageBody::PullMarkets_MessageBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PullMarkets_MessageBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullMarkets.MessageBody)
}
PullMarkets_MessageBody::PullMarkets_MessageBody(const PullMarkets_MessageBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange().size() > 0) {
    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  // @@protoc_insertion_point(copy_constructor:models.PullMarkets.MessageBody)
}

void PullMarkets_MessageBody::SharedCtor() {
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PullMarkets_MessageBody::~PullMarkets_MessageBody() {
  // @@protoc_insertion_point(destructor:models.PullMarkets.MessageBody)
  SharedDtor();
}

void PullMarkets_MessageBody::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PullMarkets_MessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullMarkets_MessageBody::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullMarkets_MessageBody& PullMarkets_MessageBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PullMarkets_MessageBody.base);
  return *internal_default_instance();
}


void PullMarkets_MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullMarkets.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PullMarkets_MessageBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullMarkets.MessageBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Exchange = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), static_cast<int>(this->exchange().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.PullMarkets.MessageBody.Exchange"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullMarkets.MessageBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullMarkets.MessageBody)
  return false;
#undef DO_
}

void PullMarkets_MessageBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullMarkets.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.PullMarkets.MessageBody.Exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullMarkets.MessageBody)
}

::google::protobuf::uint8* PullMarkets_MessageBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullMarkets.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.PullMarkets.MessageBody.Exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullMarkets.MessageBody)
  return target;
}

size_t PullMarkets_MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullMarkets.MessageBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullMarkets_MessageBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullMarkets.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PullMarkets_MessageBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullMarkets_MessageBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullMarkets.MessageBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullMarkets.MessageBody)
    MergeFrom(*source);
  }
}

void PullMarkets_MessageBody::MergeFrom(const PullMarkets_MessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullMarkets.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
}

void PullMarkets_MessageBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullMarkets.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullMarkets_MessageBody::CopyFrom(const PullMarkets_MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullMarkets.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullMarkets_MessageBody::IsInitialized() const {
  return true;
}

void PullMarkets_MessageBody::Swap(PullMarkets_MessageBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullMarkets_MessageBody::InternalSwap(PullMarkets_MessageBody* other) {
  using std::swap;
  exchange_.Swap(&other->exchange_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullMarkets_MessageBody::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullMarkets::InitAsDefaultInstance() {
  ::models::_PullMarkets_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PullMarkets_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::PullMarkets_MessageBody*>(
      ::models::PullMarkets_MessageBody::internal_default_instance());
}
void PullMarkets::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullMarkets::kHeaderFieldNumber;
const int PullMarkets::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullMarkets::PullMarkets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frobot_2eproto::scc_info_PullMarkets.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullMarkets)
}
PullMarkets::PullMarkets(const PullMarkets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::PullMarkets_MessageBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PullMarkets)
}

void PullMarkets::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PullMarkets::~PullMarkets() {
  // @@protoc_insertion_point(destructor:models.PullMarkets)
  SharedDtor();
}

void PullMarkets::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PullMarkets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullMarkets::descriptor() {
  ::protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullMarkets& PullMarkets::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frobot_2eproto::scc_info_PullMarkets.base);
  return *internal_default_instance();
}


void PullMarkets::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullMarkets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PullMarkets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullMarkets)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.PullMarkets.MessageBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullMarkets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullMarkets)
  return false;
#undef DO_
}

void PullMarkets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullMarkets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.PullMarkets.MessageBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullMarkets)
}

::google::protobuf::uint8* PullMarkets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullMarkets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.PullMarkets.MessageBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullMarkets)
  return target;
}

size_t PullMarkets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullMarkets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.PullMarkets.MessageBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullMarkets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullMarkets)
  GOOGLE_DCHECK_NE(&from, this);
  const PullMarkets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullMarkets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullMarkets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullMarkets)
    MergeFrom(*source);
  }
}

void PullMarkets::MergeFrom(const PullMarkets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullMarkets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::PullMarkets_MessageBody::MergeFrom(from.body());
  }
}

void PullMarkets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullMarkets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullMarkets::CopyFrom(const PullMarkets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullMarkets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullMarkets::IsInitialized() const {
  return true;
}

void PullMarkets::Swap(PullMarkets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullMarkets::InternalSwap(PullMarkets* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullMarkets::GetMetadata() const {
  protobuf_messages_5frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace models
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::AccountBody* Arena::CreateMaybeMessage< ::models::AccountBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::AccountBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushLogin* Arena::CreateMaybeMessage< ::models::PushLogin >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushLogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushOrder* Arena::CreateMaybeMessage< ::models::PushOrder >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushOrder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushCancel* Arena::CreateMaybeMessage< ::models::PushCancel >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushCancel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushCancelAll* Arena::CreateMaybeMessage< ::models::PushCancelAll >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushCancelAll >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullOrders* Arena::CreateMaybeMessage< ::models::PullOrders >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullOrders >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullBalances* Arena::CreateMaybeMessage< ::models::PullBalances >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullBalances >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullMarkets_MessageBody* Arena::CreateMaybeMessage< ::models::PullMarkets_MessageBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullMarkets_MessageBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullMarkets* Arena::CreateMaybeMessage< ::models::PullMarkets >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullMarkets >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
