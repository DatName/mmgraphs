// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_marketdata.proto

#ifndef PROTOBUF_INCLUDED_messages_5fmarketdata_2eproto
#define PROTOBUF_INCLUDED_messages_5fmarketdata_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "messages_generic.pb.h"
#include "marketdata.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fmarketdata_2eproto 

namespace protobuf_messages_5fmarketdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_messages_5fmarketdata_2eproto
namespace models {
class OrderBookSnapshot;
class OrderBookSnapshotDefaultTypeInternal;
extern OrderBookSnapshotDefaultTypeInternal _OrderBookSnapshot_default_instance_;
class OrderBookSnapshot_MessageBody;
class OrderBookSnapshot_MessageBodyDefaultTypeInternal;
extern OrderBookSnapshot_MessageBodyDefaultTypeInternal _OrderBookSnapshot_MessageBody_default_instance_;
class OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse;
class OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUseDefaultTypeInternal;
extern OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUseDefaultTypeInternal _OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse_default_instance_;
class OrderBookUpdate;
class OrderBookUpdateDefaultTypeInternal;
extern OrderBookUpdateDefaultTypeInternal _OrderBookUpdate_default_instance_;
class OrderBookUpdate_MessageBody;
class OrderBookUpdate_MessageBodyDefaultTypeInternal;
extern OrderBookUpdate_MessageBodyDefaultTypeInternal _OrderBookUpdate_MessageBody_default_instance_;
class TradeUpdate;
class TradeUpdateDefaultTypeInternal;
extern TradeUpdateDefaultTypeInternal _TradeUpdate_default_instance_;
class TradeUpdate_MessageBody;
class TradeUpdate_MessageBodyDefaultTypeInternal;
extern TradeUpdate_MessageBodyDefaultTypeInternal _TradeUpdate_MessageBody_default_instance_;
}  // namespace models
namespace google {
namespace protobuf {
template<> ::models::OrderBookSnapshot* Arena::CreateMaybeMessage<::models::OrderBookSnapshot>(Arena*);
template<> ::models::OrderBookSnapshot_MessageBody* Arena::CreateMaybeMessage<::models::OrderBookSnapshot_MessageBody>(Arena*);
template<> ::models::OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse* Arena::CreateMaybeMessage<::models::OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse>(Arena*);
template<> ::models::OrderBookUpdate* Arena::CreateMaybeMessage<::models::OrderBookUpdate>(Arena*);
template<> ::models::OrderBookUpdate_MessageBody* Arena::CreateMaybeMessage<::models::OrderBookUpdate_MessageBody>(Arena*);
template<> ::models::TradeUpdate* Arena::CreateMaybeMessage<::models::TradeUpdate>(Arena*);
template<> ::models::TradeUpdate_MessageBody* Arena::CreateMaybeMessage<::models::TradeUpdate_MessageBody>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace models {

// ===================================================================

class OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse();
  OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse& other);
  static const OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse*>(&_OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class OrderBookSnapshot_MessageBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.OrderBookSnapshot.MessageBody) */ {
 public:
  OrderBookSnapshot_MessageBody();
  virtual ~OrderBookSnapshot_MessageBody();

  OrderBookSnapshot_MessageBody(const OrderBookSnapshot_MessageBody& from);

  inline OrderBookSnapshot_MessageBody& operator=(const OrderBookSnapshot_MessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBookSnapshot_MessageBody(OrderBookSnapshot_MessageBody&& from) noexcept
    : OrderBookSnapshot_MessageBody() {
    *this = ::std::move(from);
  }

  inline OrderBookSnapshot_MessageBody& operator=(OrderBookSnapshot_MessageBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBookSnapshot_MessageBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBookSnapshot_MessageBody* internal_default_instance() {
    return reinterpret_cast<const OrderBookSnapshot_MessageBody*>(
               &_OrderBookSnapshot_MessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OrderBookSnapshot_MessageBody* other);
  friend void swap(OrderBookSnapshot_MessageBody& a, OrderBookSnapshot_MessageBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBookSnapshot_MessageBody* New() const final {
    return CreateMaybeMessage<OrderBookSnapshot_MessageBody>(NULL);
  }

  OrderBookSnapshot_MessageBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBookSnapshot_MessageBody>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBookSnapshot_MessageBody& from);
  void MergeFrom(const OrderBookSnapshot_MessageBody& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBookSnapshot_MessageBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, double> Indicators = 2;
  int indicators_size() const;
  void clear_indicators();
  static const int kIndicatorsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, double >&
      indicators() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_indicators();

  // .models.Level2Snapshot Snapshot = 1;
  bool has_snapshot() const;
  void clear_snapshot();
  static const int kSnapshotFieldNumber = 1;
  private:
  const ::models::Level2Snapshot& _internal_snapshot() const;
  public:
  const ::models::Level2Snapshot& snapshot() const;
  ::models::Level2Snapshot* release_snapshot();
  ::models::Level2Snapshot* mutable_snapshot();
  void set_allocated_snapshot(::models::Level2Snapshot* snapshot);

  // @@protoc_insertion_point(class_scope:models.OrderBookSnapshot.MessageBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      OrderBookSnapshot_MessageBody_IndicatorsEntry_DoNotUse,
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > indicators_;
  ::models::Level2Snapshot* snapshot_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_5fmarketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderBookSnapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.OrderBookSnapshot) */ {
 public:
  OrderBookSnapshot();
  virtual ~OrderBookSnapshot();

  OrderBookSnapshot(const OrderBookSnapshot& from);

  inline OrderBookSnapshot& operator=(const OrderBookSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBookSnapshot(OrderBookSnapshot&& from) noexcept
    : OrderBookSnapshot() {
    *this = ::std::move(from);
  }

  inline OrderBookSnapshot& operator=(OrderBookSnapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBookSnapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBookSnapshot* internal_default_instance() {
    return reinterpret_cast<const OrderBookSnapshot*>(
               &_OrderBookSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(OrderBookSnapshot* other);
  friend void swap(OrderBookSnapshot& a, OrderBookSnapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBookSnapshot* New() const final {
    return CreateMaybeMessage<OrderBookSnapshot>(NULL);
  }

  OrderBookSnapshot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBookSnapshot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBookSnapshot& from);
  void MergeFrom(const OrderBookSnapshot& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBookSnapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OrderBookSnapshot_MessageBody MessageBody;

  // accessors -------------------------------------------------------

  // .models.MessageHeader Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::models::MessageHeader& _internal_header() const;
  public:
  const ::models::MessageHeader& header() const;
  ::models::MessageHeader* release_header();
  ::models::MessageHeader* mutable_header();
  void set_allocated_header(::models::MessageHeader* header);

  // .models.OrderBookSnapshot.MessageBody Body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  private:
  const ::models::OrderBookSnapshot_MessageBody& _internal_body() const;
  public:
  const ::models::OrderBookSnapshot_MessageBody& body() const;
  ::models::OrderBookSnapshot_MessageBody* release_body();
  ::models::OrderBookSnapshot_MessageBody* mutable_body();
  void set_allocated_body(::models::OrderBookSnapshot_MessageBody* body);

  // @@protoc_insertion_point(class_scope:models.OrderBookSnapshot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::models::MessageHeader* header_;
  ::models::OrderBookSnapshot_MessageBody* body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_5fmarketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderBookUpdate_MessageBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.OrderBookUpdate.MessageBody) */ {
 public:
  OrderBookUpdate_MessageBody();
  virtual ~OrderBookUpdate_MessageBody();

  OrderBookUpdate_MessageBody(const OrderBookUpdate_MessageBody& from);

  inline OrderBookUpdate_MessageBody& operator=(const OrderBookUpdate_MessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBookUpdate_MessageBody(OrderBookUpdate_MessageBody&& from) noexcept
    : OrderBookUpdate_MessageBody() {
    *this = ::std::move(from);
  }

  inline OrderBookUpdate_MessageBody& operator=(OrderBookUpdate_MessageBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBookUpdate_MessageBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBookUpdate_MessageBody* internal_default_instance() {
    return reinterpret_cast<const OrderBookUpdate_MessageBody*>(
               &_OrderBookUpdate_MessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(OrderBookUpdate_MessageBody* other);
  friend void swap(OrderBookUpdate_MessageBody& a, OrderBookUpdate_MessageBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBookUpdate_MessageBody* New() const final {
    return CreateMaybeMessage<OrderBookUpdate_MessageBody>(NULL);
  }

  OrderBookUpdate_MessageBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBookUpdate_MessageBody>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBookUpdate_MessageBody& from);
  void MergeFrom(const OrderBookUpdate_MessageBody& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBookUpdate_MessageBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .models.Level2Update Update = 1;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 1;
  private:
  const ::models::Level2Update& _internal_update() const;
  public:
  const ::models::Level2Update& update() const;
  ::models::Level2Update* release_update();
  ::models::Level2Update* mutable_update();
  void set_allocated_update(::models::Level2Update* update);

  // @@protoc_insertion_point(class_scope:models.OrderBookUpdate.MessageBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::models::Level2Update* update_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_5fmarketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderBookUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.OrderBookUpdate) */ {
 public:
  OrderBookUpdate();
  virtual ~OrderBookUpdate();

  OrderBookUpdate(const OrderBookUpdate& from);

  inline OrderBookUpdate& operator=(const OrderBookUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBookUpdate(OrderBookUpdate&& from) noexcept
    : OrderBookUpdate() {
    *this = ::std::move(from);
  }

  inline OrderBookUpdate& operator=(OrderBookUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBookUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBookUpdate* internal_default_instance() {
    return reinterpret_cast<const OrderBookUpdate*>(
               &_OrderBookUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(OrderBookUpdate* other);
  friend void swap(OrderBookUpdate& a, OrderBookUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBookUpdate* New() const final {
    return CreateMaybeMessage<OrderBookUpdate>(NULL);
  }

  OrderBookUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBookUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBookUpdate& from);
  void MergeFrom(const OrderBookUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBookUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OrderBookUpdate_MessageBody MessageBody;

  // accessors -------------------------------------------------------

  // .models.MessageHeader Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::models::MessageHeader& _internal_header() const;
  public:
  const ::models::MessageHeader& header() const;
  ::models::MessageHeader* release_header();
  ::models::MessageHeader* mutable_header();
  void set_allocated_header(::models::MessageHeader* header);

  // .models.OrderBookUpdate.MessageBody Body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  private:
  const ::models::OrderBookUpdate_MessageBody& _internal_body() const;
  public:
  const ::models::OrderBookUpdate_MessageBody& body() const;
  ::models::OrderBookUpdate_MessageBody* release_body();
  ::models::OrderBookUpdate_MessageBody* mutable_body();
  void set_allocated_body(::models::OrderBookUpdate_MessageBody* body);

  // @@protoc_insertion_point(class_scope:models.OrderBookUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::models::MessageHeader* header_;
  ::models::OrderBookUpdate_MessageBody* body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_5fmarketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TradeUpdate_MessageBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.TradeUpdate.MessageBody) */ {
 public:
  TradeUpdate_MessageBody();
  virtual ~TradeUpdate_MessageBody();

  TradeUpdate_MessageBody(const TradeUpdate_MessageBody& from);

  inline TradeUpdate_MessageBody& operator=(const TradeUpdate_MessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TradeUpdate_MessageBody(TradeUpdate_MessageBody&& from) noexcept
    : TradeUpdate_MessageBody() {
    *this = ::std::move(from);
  }

  inline TradeUpdate_MessageBody& operator=(TradeUpdate_MessageBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TradeUpdate_MessageBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeUpdate_MessageBody* internal_default_instance() {
    return reinterpret_cast<const TradeUpdate_MessageBody*>(
               &_TradeUpdate_MessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TradeUpdate_MessageBody* other);
  friend void swap(TradeUpdate_MessageBody& a, TradeUpdate_MessageBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TradeUpdate_MessageBody* New() const final {
    return CreateMaybeMessage<TradeUpdate_MessageBody>(NULL);
  }

  TradeUpdate_MessageBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TradeUpdate_MessageBody>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TradeUpdate_MessageBody& from);
  void MergeFrom(const TradeUpdate_MessageBody& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TradeUpdate_MessageBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .models.Level2Trade Trades = 2;
  int trades_size() const;
  void clear_trades();
  static const int kTradesFieldNumber = 2;
  ::models::Level2Trade* mutable_trades(int index);
  ::google::protobuf::RepeatedPtrField< ::models::Level2Trade >*
      mutable_trades();
  const ::models::Level2Trade& trades(int index) const;
  ::models::Level2Trade* add_trades();
  const ::google::protobuf::RepeatedPtrField< ::models::Level2Trade >&
      trades() const;

  // string Exchange = 1;
  void clear_exchange();
  static const int kExchangeFieldNumber = 1;
  const ::std::string& exchange() const;
  void set_exchange(const ::std::string& value);
  #if LANG_CXX11
  void set_exchange(::std::string&& value);
  #endif
  void set_exchange(const char* value);
  void set_exchange(const char* value, size_t size);
  ::std::string* mutable_exchange();
  ::std::string* release_exchange();
  void set_allocated_exchange(::std::string* exchange);

  // @@protoc_insertion_point(class_scope:models.TradeUpdate.MessageBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::models::Level2Trade > trades_;
  ::google::protobuf::internal::ArenaStringPtr exchange_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_5fmarketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TradeUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.TradeUpdate) */ {
 public:
  TradeUpdate();
  virtual ~TradeUpdate();

  TradeUpdate(const TradeUpdate& from);

  inline TradeUpdate& operator=(const TradeUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TradeUpdate(TradeUpdate&& from) noexcept
    : TradeUpdate() {
    *this = ::std::move(from);
  }

  inline TradeUpdate& operator=(TradeUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TradeUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeUpdate* internal_default_instance() {
    return reinterpret_cast<const TradeUpdate*>(
               &_TradeUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TradeUpdate* other);
  friend void swap(TradeUpdate& a, TradeUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TradeUpdate* New() const final {
    return CreateMaybeMessage<TradeUpdate>(NULL);
  }

  TradeUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TradeUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TradeUpdate& from);
  void MergeFrom(const TradeUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TradeUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TradeUpdate_MessageBody MessageBody;

  // accessors -------------------------------------------------------

  // .models.MessageHeader Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::models::MessageHeader& _internal_header() const;
  public:
  const ::models::MessageHeader& header() const;
  ::models::MessageHeader* release_header();
  ::models::MessageHeader* mutable_header();
  void set_allocated_header(::models::MessageHeader* header);

  // .models.TradeUpdate.MessageBody Body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  private:
  const ::models::TradeUpdate_MessageBody& _internal_body() const;
  public:
  const ::models::TradeUpdate_MessageBody& body() const;
  ::models::TradeUpdate_MessageBody* release_body();
  ::models::TradeUpdate_MessageBody* mutable_body();
  void set_allocated_body(::models::TradeUpdate_MessageBody* body);

  // @@protoc_insertion_point(class_scope:models.TradeUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::models::MessageHeader* header_;
  ::models::TradeUpdate_MessageBody* body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_5fmarketdata_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OrderBookSnapshot_MessageBody

// .models.Level2Snapshot Snapshot = 1;
inline bool OrderBookSnapshot_MessageBody::has_snapshot() const {
  return this != internal_default_instance() && snapshot_ != NULL;
}
inline const ::models::Level2Snapshot& OrderBookSnapshot_MessageBody::_internal_snapshot() const {
  return *snapshot_;
}
inline const ::models::Level2Snapshot& OrderBookSnapshot_MessageBody::snapshot() const {
  const ::models::Level2Snapshot* p = snapshot_;
  // @@protoc_insertion_point(field_get:models.OrderBookSnapshot.MessageBody.Snapshot)
  return p != NULL ? *p : *reinterpret_cast<const ::models::Level2Snapshot*>(
      &::models::_Level2Snapshot_default_instance_);
}
inline ::models::Level2Snapshot* OrderBookSnapshot_MessageBody::release_snapshot() {
  // @@protoc_insertion_point(field_release:models.OrderBookSnapshot.MessageBody.Snapshot)
  
  ::models::Level2Snapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline ::models::Level2Snapshot* OrderBookSnapshot_MessageBody::mutable_snapshot() {
  
  if (snapshot_ == NULL) {
    auto* p = CreateMaybeMessage<::models::Level2Snapshot>(GetArenaNoVirtual());
    snapshot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.OrderBookSnapshot.MessageBody.Snapshot)
  return snapshot_;
}
inline void OrderBookSnapshot_MessageBody::set_allocated_snapshot(::models::Level2Snapshot* snapshot) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(snapshot_);
  }
  if (snapshot) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      snapshot = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, snapshot, submessage_arena);
    }
    
  } else {
    
  }
  snapshot_ = snapshot;
  // @@protoc_insertion_point(field_set_allocated:models.OrderBookSnapshot.MessageBody.Snapshot)
}

// map<string, double> Indicators = 2;
inline int OrderBookSnapshot_MessageBody::indicators_size() const {
  return indicators_.size();
}
inline void OrderBookSnapshot_MessageBody::clear_indicators() {
  indicators_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
OrderBookSnapshot_MessageBody::indicators() const {
  // @@protoc_insertion_point(field_map:models.OrderBookSnapshot.MessageBody.Indicators)
  return indicators_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
OrderBookSnapshot_MessageBody::mutable_indicators() {
  // @@protoc_insertion_point(field_mutable_map:models.OrderBookSnapshot.MessageBody.Indicators)
  return indicators_.MutableMap();
}

// -------------------------------------------------------------------

// OrderBookSnapshot

// .models.MessageHeader Header = 1;
inline bool OrderBookSnapshot::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::models::MessageHeader& OrderBookSnapshot::_internal_header() const {
  return *header_;
}
inline const ::models::MessageHeader& OrderBookSnapshot::header() const {
  const ::models::MessageHeader* p = header_;
  // @@protoc_insertion_point(field_get:models.OrderBookSnapshot.Header)
  return p != NULL ? *p : *reinterpret_cast<const ::models::MessageHeader*>(
      &::models::_MessageHeader_default_instance_);
}
inline ::models::MessageHeader* OrderBookSnapshot::release_header() {
  // @@protoc_insertion_point(field_release:models.OrderBookSnapshot.Header)
  
  ::models::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::models::MessageHeader* OrderBookSnapshot::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::models::MessageHeader>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.OrderBookSnapshot.Header)
  return header_;
}
inline void OrderBookSnapshot::set_allocated_header(::models::MessageHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:models.OrderBookSnapshot.Header)
}

// .models.OrderBookSnapshot.MessageBody Body = 2;
inline bool OrderBookSnapshot::has_body() const {
  return this != internal_default_instance() && body_ != NULL;
}
inline void OrderBookSnapshot::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
inline const ::models::OrderBookSnapshot_MessageBody& OrderBookSnapshot::_internal_body() const {
  return *body_;
}
inline const ::models::OrderBookSnapshot_MessageBody& OrderBookSnapshot::body() const {
  const ::models::OrderBookSnapshot_MessageBody* p = body_;
  // @@protoc_insertion_point(field_get:models.OrderBookSnapshot.Body)
  return p != NULL ? *p : *reinterpret_cast<const ::models::OrderBookSnapshot_MessageBody*>(
      &::models::_OrderBookSnapshot_MessageBody_default_instance_);
}
inline ::models::OrderBookSnapshot_MessageBody* OrderBookSnapshot::release_body() {
  // @@protoc_insertion_point(field_release:models.OrderBookSnapshot.Body)
  
  ::models::OrderBookSnapshot_MessageBody* temp = body_;
  body_ = NULL;
  return temp;
}
inline ::models::OrderBookSnapshot_MessageBody* OrderBookSnapshot::mutable_body() {
  
  if (body_ == NULL) {
    auto* p = CreateMaybeMessage<::models::OrderBookSnapshot_MessageBody>(GetArenaNoVirtual());
    body_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.OrderBookSnapshot.Body)
  return body_;
}
inline void OrderBookSnapshot::set_allocated_body(::models::OrderBookSnapshot_MessageBody* body) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete body_;
  }
  if (body) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:models.OrderBookSnapshot.Body)
}

// -------------------------------------------------------------------

// OrderBookUpdate_MessageBody

// .models.Level2Update Update = 1;
inline bool OrderBookUpdate_MessageBody::has_update() const {
  return this != internal_default_instance() && update_ != NULL;
}
inline const ::models::Level2Update& OrderBookUpdate_MessageBody::_internal_update() const {
  return *update_;
}
inline const ::models::Level2Update& OrderBookUpdate_MessageBody::update() const {
  const ::models::Level2Update* p = update_;
  // @@protoc_insertion_point(field_get:models.OrderBookUpdate.MessageBody.Update)
  return p != NULL ? *p : *reinterpret_cast<const ::models::Level2Update*>(
      &::models::_Level2Update_default_instance_);
}
inline ::models::Level2Update* OrderBookUpdate_MessageBody::release_update() {
  // @@protoc_insertion_point(field_release:models.OrderBookUpdate.MessageBody.Update)
  
  ::models::Level2Update* temp = update_;
  update_ = NULL;
  return temp;
}
inline ::models::Level2Update* OrderBookUpdate_MessageBody::mutable_update() {
  
  if (update_ == NULL) {
    auto* p = CreateMaybeMessage<::models::Level2Update>(GetArenaNoVirtual());
    update_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.OrderBookUpdate.MessageBody.Update)
  return update_;
}
inline void OrderBookUpdate_MessageBody::set_allocated_update(::models::Level2Update* update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_);
  }
  if (update) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    
  } else {
    
  }
  update_ = update;
  // @@protoc_insertion_point(field_set_allocated:models.OrderBookUpdate.MessageBody.Update)
}

// -------------------------------------------------------------------

// OrderBookUpdate

// .models.MessageHeader Header = 1;
inline bool OrderBookUpdate::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::models::MessageHeader& OrderBookUpdate::_internal_header() const {
  return *header_;
}
inline const ::models::MessageHeader& OrderBookUpdate::header() const {
  const ::models::MessageHeader* p = header_;
  // @@protoc_insertion_point(field_get:models.OrderBookUpdate.Header)
  return p != NULL ? *p : *reinterpret_cast<const ::models::MessageHeader*>(
      &::models::_MessageHeader_default_instance_);
}
inline ::models::MessageHeader* OrderBookUpdate::release_header() {
  // @@protoc_insertion_point(field_release:models.OrderBookUpdate.Header)
  
  ::models::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::models::MessageHeader* OrderBookUpdate::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::models::MessageHeader>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.OrderBookUpdate.Header)
  return header_;
}
inline void OrderBookUpdate::set_allocated_header(::models::MessageHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:models.OrderBookUpdate.Header)
}

// .models.OrderBookUpdate.MessageBody Body = 2;
inline bool OrderBookUpdate::has_body() const {
  return this != internal_default_instance() && body_ != NULL;
}
inline void OrderBookUpdate::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
inline const ::models::OrderBookUpdate_MessageBody& OrderBookUpdate::_internal_body() const {
  return *body_;
}
inline const ::models::OrderBookUpdate_MessageBody& OrderBookUpdate::body() const {
  const ::models::OrderBookUpdate_MessageBody* p = body_;
  // @@protoc_insertion_point(field_get:models.OrderBookUpdate.Body)
  return p != NULL ? *p : *reinterpret_cast<const ::models::OrderBookUpdate_MessageBody*>(
      &::models::_OrderBookUpdate_MessageBody_default_instance_);
}
inline ::models::OrderBookUpdate_MessageBody* OrderBookUpdate::release_body() {
  // @@protoc_insertion_point(field_release:models.OrderBookUpdate.Body)
  
  ::models::OrderBookUpdate_MessageBody* temp = body_;
  body_ = NULL;
  return temp;
}
inline ::models::OrderBookUpdate_MessageBody* OrderBookUpdate::mutable_body() {
  
  if (body_ == NULL) {
    auto* p = CreateMaybeMessage<::models::OrderBookUpdate_MessageBody>(GetArenaNoVirtual());
    body_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.OrderBookUpdate.Body)
  return body_;
}
inline void OrderBookUpdate::set_allocated_body(::models::OrderBookUpdate_MessageBody* body) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete body_;
  }
  if (body) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:models.OrderBookUpdate.Body)
}

// -------------------------------------------------------------------

// TradeUpdate_MessageBody

// string Exchange = 1;
inline void TradeUpdate_MessageBody::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TradeUpdate_MessageBody::exchange() const {
  // @@protoc_insertion_point(field_get:models.TradeUpdate.MessageBody.Exchange)
  return exchange_.GetNoArena();
}
inline void TradeUpdate_MessageBody::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.TradeUpdate.MessageBody.Exchange)
}
#if LANG_CXX11
inline void TradeUpdate_MessageBody::set_exchange(::std::string&& value) {
  
  exchange_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.TradeUpdate.MessageBody.Exchange)
}
#endif
inline void TradeUpdate_MessageBody::set_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.TradeUpdate.MessageBody.Exchange)
}
inline void TradeUpdate_MessageBody::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.TradeUpdate.MessageBody.Exchange)
}
inline ::std::string* TradeUpdate_MessageBody::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:models.TradeUpdate.MessageBody.Exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TradeUpdate_MessageBody::release_exchange() {
  // @@protoc_insertion_point(field_release:models.TradeUpdate.MessageBody.Exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TradeUpdate_MessageBody::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:models.TradeUpdate.MessageBody.Exchange)
}

// repeated .models.Level2Trade Trades = 2;
inline int TradeUpdate_MessageBody::trades_size() const {
  return trades_.size();
}
inline ::models::Level2Trade* TradeUpdate_MessageBody::mutable_trades(int index) {
  // @@protoc_insertion_point(field_mutable:models.TradeUpdate.MessageBody.Trades)
  return trades_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::models::Level2Trade >*
TradeUpdate_MessageBody::mutable_trades() {
  // @@protoc_insertion_point(field_mutable_list:models.TradeUpdate.MessageBody.Trades)
  return &trades_;
}
inline const ::models::Level2Trade& TradeUpdate_MessageBody::trades(int index) const {
  // @@protoc_insertion_point(field_get:models.TradeUpdate.MessageBody.Trades)
  return trades_.Get(index);
}
inline ::models::Level2Trade* TradeUpdate_MessageBody::add_trades() {
  // @@protoc_insertion_point(field_add:models.TradeUpdate.MessageBody.Trades)
  return trades_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::models::Level2Trade >&
TradeUpdate_MessageBody::trades() const {
  // @@protoc_insertion_point(field_list:models.TradeUpdate.MessageBody.Trades)
  return trades_;
}

// -------------------------------------------------------------------

// TradeUpdate

// .models.MessageHeader Header = 1;
inline bool TradeUpdate::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::models::MessageHeader& TradeUpdate::_internal_header() const {
  return *header_;
}
inline const ::models::MessageHeader& TradeUpdate::header() const {
  const ::models::MessageHeader* p = header_;
  // @@protoc_insertion_point(field_get:models.TradeUpdate.Header)
  return p != NULL ? *p : *reinterpret_cast<const ::models::MessageHeader*>(
      &::models::_MessageHeader_default_instance_);
}
inline ::models::MessageHeader* TradeUpdate::release_header() {
  // @@protoc_insertion_point(field_release:models.TradeUpdate.Header)
  
  ::models::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::models::MessageHeader* TradeUpdate::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::models::MessageHeader>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.TradeUpdate.Header)
  return header_;
}
inline void TradeUpdate::set_allocated_header(::models::MessageHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:models.TradeUpdate.Header)
}

// .models.TradeUpdate.MessageBody Body = 2;
inline bool TradeUpdate::has_body() const {
  return this != internal_default_instance() && body_ != NULL;
}
inline void TradeUpdate::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
inline const ::models::TradeUpdate_MessageBody& TradeUpdate::_internal_body() const {
  return *body_;
}
inline const ::models::TradeUpdate_MessageBody& TradeUpdate::body() const {
  const ::models::TradeUpdate_MessageBody* p = body_;
  // @@protoc_insertion_point(field_get:models.TradeUpdate.Body)
  return p != NULL ? *p : *reinterpret_cast<const ::models::TradeUpdate_MessageBody*>(
      &::models::_TradeUpdate_MessageBody_default_instance_);
}
inline ::models::TradeUpdate_MessageBody* TradeUpdate::release_body() {
  // @@protoc_insertion_point(field_release:models.TradeUpdate.Body)
  
  ::models::TradeUpdate_MessageBody* temp = body_;
  body_ = NULL;
  return temp;
}
inline ::models::TradeUpdate_MessageBody* TradeUpdate::mutable_body() {
  
  if (body_ == NULL) {
    auto* p = CreateMaybeMessage<::models::TradeUpdate_MessageBody>(GetArenaNoVirtual());
    body_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.TradeUpdate.Body)
  return body_;
}
inline void TradeUpdate::set_allocated_body(::models::TradeUpdate_MessageBody* body) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete body_;
  }
  if (body) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:models.TradeUpdate.Body)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace models

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_messages_5fmarketdata_2eproto
