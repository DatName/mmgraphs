// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_broker.proto

#include "messages_broker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_5fbroker_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BalanceBody_AvailableEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BalanceBody_TotalEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InstrumentBody;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PullMarketsResponse_MessageBody;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BalanceBody;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fbroker_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PushLoginResponse_MessageBody;
}  // namespace protobuf_messages_5fbroker_2eproto
namespace protobuf_messages_5fgeneric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fgeneric_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageHeader;
}  // namespace protobuf_messages_5fgeneric_2eproto
namespace protobuf_messages_5findicators_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5findicators_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TradeIndicator;
}  // namespace protobuf_messages_5findicators_2eproto
namespace protobuf_order_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_order_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Order;
}  // namespace protobuf_order_2eproto
namespace models {
class BalanceBody_TotalEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BalanceBody_TotalEntry_DoNotUse>
      _instance;
} _BalanceBody_TotalEntry_DoNotUse_default_instance_;
class BalanceBody_AvailableEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BalanceBody_AvailableEntry_DoNotUse>
      _instance;
} _BalanceBody_AvailableEntry_DoNotUse_default_instance_;
class BalanceBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BalanceBody>
      _instance;
} _BalanceBody_default_instance_;
class InstrumentBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstrumentBody>
      _instance;
} _InstrumentBody_default_instance_;
class PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse>
      _instance;
} _PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse_default_instance_;
class PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse>
      _instance;
} _PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse_default_instance_;
class PushLoginResponse_MessageBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushLoginResponse_MessageBody>
      _instance;
} _PushLoginResponse_MessageBody_default_instance_;
class PushLoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushLoginResponse>
      _instance;
} _PushLoginResponse_default_instance_;
class PullOrdersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullOrdersResponse>
      _instance;
} _PullOrdersResponse_default_instance_;
class PullBalancesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullBalancesResponse>
      _instance;
} _PullBalancesResponse_default_instance_;
class PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse>
      _instance;
} _PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse_default_instance_;
class PullMarketsResponse_MessageBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullMarketsResponse_MessageBody>
      _instance;
} _PullMarketsResponse_MessageBody_default_instance_;
class PullMarketsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullMarketsResponse>
      _instance;
} _PullMarketsResponse_default_instance_;
class TradeIndicatorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TradeIndicatorMessage>
      _instance;
} _TradeIndicatorMessage_default_instance_;
class OpenOrdersIndicatorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenOrdersIndicatorMessage>
      _instance;
} _OpenOrdersIndicatorMessage_default_instance_;
}  // namespace models
namespace protobuf_messages_5fbroker_2eproto {
static void InitDefaultsBalanceBody_TotalEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_BalanceBody_TotalEntry_DoNotUse_default_instance_;
    new (ptr) ::models::BalanceBody_TotalEntry_DoNotUse();
  }
  ::models::BalanceBody_TotalEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BalanceBody_TotalEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBalanceBody_TotalEntry_DoNotUse}, {}};

static void InitDefaultsBalanceBody_AvailableEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_BalanceBody_AvailableEntry_DoNotUse_default_instance_;
    new (ptr) ::models::BalanceBody_AvailableEntry_DoNotUse();
  }
  ::models::BalanceBody_AvailableEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BalanceBody_AvailableEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBalanceBody_AvailableEntry_DoNotUse}, {}};

static void InitDefaultsBalanceBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_BalanceBody_default_instance_;
    new (ptr) ::models::BalanceBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::BalanceBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BalanceBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBalanceBody}, {
      &protobuf_messages_5fbroker_2eproto::scc_info_BalanceBody_TotalEntry_DoNotUse.base,
      &protobuf_messages_5fbroker_2eproto::scc_info_BalanceBody_AvailableEntry_DoNotUse.base,}};

static void InitDefaultsInstrumentBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_InstrumentBody_default_instance_;
    new (ptr) ::models::InstrumentBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::InstrumentBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstrumentBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstrumentBody}, {}};

static void InitDefaultsPushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse_default_instance_;
    new (ptr) ::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse();
  }
  ::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse}, {
      &protobuf_messages_5fbroker_2eproto::scc_info_InstrumentBody.base,}};

static void InitDefaultsPushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse_default_instance_;
    new (ptr) ::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse();
  }
  ::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse}, {}};

static void InitDefaultsPushLoginResponse_MessageBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushLoginResponse_MessageBody_default_instance_;
    new (ptr) ::models::PushLoginResponse_MessageBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PushLoginResponse_MessageBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PushLoginResponse_MessageBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPushLoginResponse_MessageBody}, {
      &protobuf_messages_5fbroker_2eproto::scc_info_BalanceBody.base,
      &protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse.base,
      &protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse.base,}};

static void InitDefaultsPushLoginResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PushLoginResponse_default_instance_;
    new (ptr) ::models::PushLoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PushLoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PushLoginResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPushLoginResponse}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse_MessageBody.base,}};

static void InitDefaultsPullOrdersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullOrdersResponse_default_instance_;
    new (ptr) ::models::PullOrdersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullOrdersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PullOrdersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPullOrdersResponse}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_order_2eproto::scc_info_Order.base,}};

static void InitDefaultsPullBalancesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullBalancesResponse_default_instance_;
    new (ptr) ::models::PullBalancesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullBalancesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PullBalancesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPullBalancesResponse}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5fbroker_2eproto::scc_info_BalanceBody.base,}};

static void InitDefaultsPullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse_default_instance_;
    new (ptr) ::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse();
  }
  ::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse}, {
      &protobuf_messages_5fbroker_2eproto::scc_info_InstrumentBody.base,}};

static void InitDefaultsPullMarketsResponse_MessageBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullMarketsResponse_MessageBody_default_instance_;
    new (ptr) ::models::PullMarketsResponse_MessageBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullMarketsResponse_MessageBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PullMarketsResponse_MessageBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPullMarketsResponse_MessageBody}, {
      &protobuf_messages_5fbroker_2eproto::scc_info_PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse.base,}};

static void InitDefaultsPullMarketsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_PullMarketsResponse_default_instance_;
    new (ptr) ::models::PullMarketsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::PullMarketsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PullMarketsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPullMarketsResponse}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5fbroker_2eproto::scc_info_PullMarketsResponse_MessageBody.base,}};

static void InitDefaultsTradeIndicatorMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_TradeIndicatorMessage_default_instance_;
    new (ptr) ::models::TradeIndicatorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::TradeIndicatorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TradeIndicatorMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTradeIndicatorMessage}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5findicators_2eproto::scc_info_TradeIndicator.base,}};

static void InitDefaultsOpenOrdersIndicatorMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_OpenOrdersIndicatorMessage_default_instance_;
    new (ptr) ::models::OpenOrdersIndicatorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::OpenOrdersIndicatorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OpenOrdersIndicatorMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOpenOrdersIndicatorMessage}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_order_2eproto::scc_info_Order.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BalanceBody_TotalEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BalanceBody_AvailableEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BalanceBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstrumentBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushLoginResponse_MessageBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushLoginResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullOrdersResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullBalancesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullMarketsResponse_MessageBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullMarketsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TradeIndicatorMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenOrdersIndicatorMessage.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_TotalEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_TotalEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_TotalEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_TotalEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_AvailableEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_AvailableEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_AvailableEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody_AvailableEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::BalanceBody, available_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, quote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, basemin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, baseprecision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, quotemin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, quoteprecision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, maker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::InstrumentBody, taker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody, instruments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse_MessageBody, positionbymarket_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PushLoginResponse, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullOrdersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullOrdersResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullOrdersResponse, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullBalancesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullBalancesResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullBalancesResponse, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse_MessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse_MessageBody, instruments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::PullMarketsResponse, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::TradeIndicatorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::TradeIndicatorMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::TradeIndicatorMessage, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::OpenOrdersIndicatorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::OpenOrdersIndicatorMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::OpenOrdersIndicatorMessage, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::models::BalanceBody_TotalEntry_DoNotUse)},
  { 9, 16, sizeof(::models::BalanceBody_AvailableEntry_DoNotUse)},
  { 18, -1, sizeof(::models::BalanceBody)},
  { 25, -1, sizeof(::models::InstrumentBody)},
  { 38, 45, sizeof(::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse)},
  { 47, 54, sizeof(::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse)},
  { 56, -1, sizeof(::models::PushLoginResponse_MessageBody)},
  { 64, -1, sizeof(::models::PushLoginResponse)},
  { 71, -1, sizeof(::models::PullOrdersResponse)},
  { 78, -1, sizeof(::models::PullBalancesResponse)},
  { 85, 92, sizeof(::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse)},
  { 94, -1, sizeof(::models::PullMarketsResponse_MessageBody)},
  { 100, -1, sizeof(::models::PullMarketsResponse)},
  { 107, -1, sizeof(::models::TradeIndicatorMessage)},
  { 114, -1, sizeof(::models::OpenOrdersIndicatorMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_BalanceBody_TotalEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_BalanceBody_AvailableEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_BalanceBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_InstrumentBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushLoginResponse_MessageBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PushLoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullOrdersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullBalancesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullMarketsResponse_MessageBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_PullMarketsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_TradeIndicatorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_OpenOrdersIndicatorMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages_broker.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025messages_broker.proto\022\006models\032\026message"
      "s_generic.proto\032\013order.proto\032\031messages_i"
      "ndicators.proto\"\323\001\n\013BalanceBody\022-\n\005Total"
      "\030\001 \003(\0132\036.models.BalanceBody.TotalEntry\0225"
      "\n\tAvailable\030\002 \003(\0132\".models.BalanceBody.A"
      "vailableEntry\032,\n\nTotalEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\001:\0028\001\0320\n\016AvailableEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"\235\001\n\016Instru"
      "mentBody\022\014\n\004Base\030\001 \001(\t\022\r\n\005Quote\030\002 \001(\t\022\017\n"
      "\007BaseMin\030\003 \001(\001\022\025\n\rBasePrecision\030\004 \001(\005\022\020\n"
      "\010QuoteMin\030\005 \001(\001\022\026\n\016QuotePrecision\030\006 \001(\005\022"
      "\r\n\005Maker\030\007 \001(\t\022\r\n\005Taker\030\010 \001(\t\"\316\003\n\021PushLo"
      "ginResponse\022%\n\006Header\030\001 \001(\0132\025.models.Mes"
      "sageHeader\0223\n\004Body\030\002 \001(\0132%.models.PushLo"
      "ginResponse.MessageBody\032\334\002\n\013MessageBody\022"
      "$\n\007Balance\030\001 \001(\0132\023.models.BalanceBody\022K\n"
      "\013Instruments\030\002 \003(\01326.models.PushLoginRes"
      "ponse.MessageBody.InstrumentsEntry\022U\n\020Po"
      "sitionByMarket\030\003 \003(\0132;.models.PushLoginR"
      "esponse.MessageBody.PositionByMarketEntr"
      "y\032J\n\020InstrumentsEntry\022\013\n\003key\030\001 \001(\t\022%\n\005va"
      "lue\030\002 \001(\0132\026.models.InstrumentBody:\0028\001\0327\n"
      "\025PositionByMarketEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\001:\0028\001\"X\n\022PullOrdersResponse\022%\n\006"
      "Header\030\001 \001(\0132\025.models.MessageHeader\022\033\n\004B"
      "ody\030\002 \003(\0132\r.models.Order\"`\n\024PullBalances"
      "Response\022%\n\006Header\030\001 \001(\0132\025.models.Messag"
      "eHeader\022!\n\004Body\030\002 \001(\0132\023.models.BalanceBo"
      "dy\"\236\002\n\023PullMarketsResponse\022%\n\006Header\030\001 \001"
      "(\0132\025.models.MessageHeader\0225\n\004Body\030\002 \001(\0132"
      "\'.models.PullMarketsResponse.MessageBody"
      "\032\250\001\n\013MessageBody\022M\n\013Instruments\030\001 \003(\01328."
      "models.PullMarketsResponse.MessageBody.I"
      "nstrumentsEntry\032J\n\020InstrumentsEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.models.Instrum"
      "entBody:\0028\001\"d\n\025TradeIndicatorMessage\022%\n\006"
      "Header\030\001 \001(\0132\025.models.MessageHeader\022$\n\004B"
      "ody\030\002 \003(\0132\026.models.TradeIndicator\"`\n\032Ope"
      "nOrdersIndicatorMessage\022%\n\006Header\030\001 \001(\0132"
      "\025.models.MessageHeader\022\033\n\004Body\030\002 \003(\0132\r.m"
      "odels.Orderb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1619);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_broker.proto", &protobuf_RegisterTypes);
  ::protobuf_messages_5fgeneric_2eproto::AddDescriptors();
  ::protobuf_order_2eproto::AddDescriptors();
  ::protobuf_messages_5findicators_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_5fbroker_2eproto
namespace models {

// ===================================================================

BalanceBody_TotalEntry_DoNotUse::BalanceBody_TotalEntry_DoNotUse() {}
BalanceBody_TotalEntry_DoNotUse::BalanceBody_TotalEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BalanceBody_TotalEntry_DoNotUse::MergeFrom(const BalanceBody_TotalEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BalanceBody_TotalEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[0];
}
void BalanceBody_TotalEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

BalanceBody_AvailableEntry_DoNotUse::BalanceBody_AvailableEntry_DoNotUse() {}
BalanceBody_AvailableEntry_DoNotUse::BalanceBody_AvailableEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BalanceBody_AvailableEntry_DoNotUse::MergeFrom(const BalanceBody_AvailableEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BalanceBody_AvailableEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[1];
}
void BalanceBody_AvailableEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BalanceBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BalanceBody::kTotalFieldNumber;
const int BalanceBody::kAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BalanceBody::BalanceBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_BalanceBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.BalanceBody)
}
BalanceBody::BalanceBody(const BalanceBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  total_.MergeFrom(from.total_);
  available_.MergeFrom(from.available_);
  // @@protoc_insertion_point(copy_constructor:models.BalanceBody)
}

void BalanceBody::SharedCtor() {
}

BalanceBody::~BalanceBody() {
  // @@protoc_insertion_point(destructor:models.BalanceBody)
  SharedDtor();
}

void BalanceBody::SharedDtor() {
}

void BalanceBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BalanceBody::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BalanceBody& BalanceBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_BalanceBody.base);
  return *internal_default_instance();
}


void BalanceBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.BalanceBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  total_.Clear();
  available_.Clear();
  _internal_metadata_.Clear();
}

bool BalanceBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.BalanceBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, double> Total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          BalanceBody_TotalEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BalanceBody_TotalEntry_DoNotUse,
              ::std::string, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::std::string, double > > parser(&total_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.BalanceBody.TotalEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, double> Available = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          BalanceBody_AvailableEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BalanceBody_AvailableEntry_DoNotUse,
              ::std::string, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::std::string, double > > parser(&available_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.BalanceBody.AvailableEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.BalanceBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.BalanceBody)
  return false;
#undef DO_
}

void BalanceBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.BalanceBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, double> Total = 1;
  if (!this->total().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.BalanceBody.TotalEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->total().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->total().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->total().begin();
          it != this->total().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BalanceBody_TotalEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(total_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BalanceBody_TotalEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->total().begin();
          it != this->total().end(); ++it) {
        entry.reset(total_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> Available = 2;
  if (!this->available().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.BalanceBody.AvailableEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->available().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->available().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->available().begin();
          it != this->available().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BalanceBody_AvailableEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(available_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BalanceBody_AvailableEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->available().begin();
          it != this->available().end(); ++it) {
        entry.reset(available_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.BalanceBody)
}

::google::protobuf::uint8* BalanceBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.BalanceBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, double> Total = 1;
  if (!this->total().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.BalanceBody.TotalEntry.key");
      }
    };

    if (deterministic &&
        this->total().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->total().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->total().begin();
          it != this->total().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BalanceBody_TotalEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(total_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BalanceBody_TotalEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->total().begin();
          it != this->total().end(); ++it) {
        entry.reset(total_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> Available = 2;
  if (!this->available().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.BalanceBody.AvailableEntry.key");
      }
    };

    if (deterministic &&
        this->available().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->available().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->available().begin();
          it != this->available().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BalanceBody_AvailableEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(available_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BalanceBody_AvailableEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->available().begin();
          it != this->available().end(); ++it) {
        entry.reset(available_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.BalanceBody)
  return target;
}

size_t BalanceBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.BalanceBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, double> Total = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->total_size());
  {
    ::std::unique_ptr<BalanceBody_TotalEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->total().begin();
        it != this->total().end(); ++it) {
      entry.reset(total_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, double> Available = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->available_size());
  {
    ::std::unique_ptr<BalanceBody_AvailableEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->available().begin();
        it != this->available().end(); ++it) {
      entry.reset(available_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BalanceBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.BalanceBody)
  GOOGLE_DCHECK_NE(&from, this);
  const BalanceBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BalanceBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.BalanceBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.BalanceBody)
    MergeFrom(*source);
  }
}

void BalanceBody::MergeFrom(const BalanceBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.BalanceBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  total_.MergeFrom(from.total_);
  available_.MergeFrom(from.available_);
}

void BalanceBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.BalanceBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BalanceBody::CopyFrom(const BalanceBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.BalanceBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BalanceBody::IsInitialized() const {
  return true;
}

void BalanceBody::Swap(BalanceBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BalanceBody::InternalSwap(BalanceBody* other) {
  using std::swap;
  total_.Swap(&other->total_);
  available_.Swap(&other->available_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BalanceBody::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstrumentBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstrumentBody::kBaseFieldNumber;
const int InstrumentBody::kQuoteFieldNumber;
const int InstrumentBody::kBaseMinFieldNumber;
const int InstrumentBody::kBasePrecisionFieldNumber;
const int InstrumentBody::kQuoteMinFieldNumber;
const int InstrumentBody::kQuotePrecisionFieldNumber;
const int InstrumentBody::kMakerFieldNumber;
const int InstrumentBody::kTakerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstrumentBody::InstrumentBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_InstrumentBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.InstrumentBody)
}
InstrumentBody::InstrumentBody(const InstrumentBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base().size() > 0) {
    base_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_);
  }
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quote().size() > 0) {
    quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
  }
  maker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.maker().size() > 0) {
    maker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maker_);
  }
  taker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taker().size() > 0) {
    taker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taker_);
  }
  ::memcpy(&basemin_, &from.basemin_,
    static_cast<size_t>(reinterpret_cast<char*>(&quoteprecision_) -
    reinterpret_cast<char*>(&basemin_)) + sizeof(quoteprecision_));
  // @@protoc_insertion_point(copy_constructor:models.InstrumentBody)
}

void InstrumentBody::SharedCtor() {
  base_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&basemin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quoteprecision_) -
      reinterpret_cast<char*>(&basemin_)) + sizeof(quoteprecision_));
}

InstrumentBody::~InstrumentBody() {
  // @@protoc_insertion_point(destructor:models.InstrumentBody)
  SharedDtor();
}

void InstrumentBody::SharedDtor() {
  base_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstrumentBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstrumentBody::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstrumentBody& InstrumentBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_InstrumentBody.base);
  return *internal_default_instance();
}


void InstrumentBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.InstrumentBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&basemin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quoteprecision_) -
      reinterpret_cast<char*>(&basemin_)) + sizeof(quoteprecision_));
  _internal_metadata_.Clear();
}

bool InstrumentBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.InstrumentBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base().data(), static_cast<int>(this->base().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.InstrumentBody.Base"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Quote = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quote()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quote().data(), static_cast<int>(this->quote().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.InstrumentBody.Quote"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double BaseMin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &basemin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BasePrecision = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseprecision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double QuoteMin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &quotemin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 QuotePrecision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quoteprecision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Maker = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->maker().data(), static_cast<int>(this->maker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.InstrumentBody.Maker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Taker = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taker().data(), static_cast<int>(this->taker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.InstrumentBody.Taker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.InstrumentBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.InstrumentBody)
  return false;
#undef DO_
}

void InstrumentBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.InstrumentBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Base = 1;
  if (this->base().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base().data(), static_cast<int>(this->base().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Base");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->base(), output);
  }

  // string Quote = 2;
  if (this->quote().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote().data(), static_cast<int>(this->quote().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Quote");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->quote(), output);
  }

  // double BaseMin = 3;
  if (this->basemin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->basemin(), output);
  }

  // int32 BasePrecision = 4;
  if (this->baseprecision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->baseprecision(), output);
  }

  // double QuoteMin = 5;
  if (this->quotemin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->quotemin(), output);
  }

  // int32 QuotePrecision = 6;
  if (this->quoteprecision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->quoteprecision(), output);
  }

  // string Maker = 7;
  if (this->maker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maker().data(), static_cast<int>(this->maker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Maker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->maker(), output);
  }

  // string Taker = 8;
  if (this->taker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taker().data(), static_cast<int>(this->taker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Taker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->taker(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.InstrumentBody)
}

::google::protobuf::uint8* InstrumentBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.InstrumentBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Base = 1;
  if (this->base().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base().data(), static_cast<int>(this->base().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Base");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->base(), target);
  }

  // string Quote = 2;
  if (this->quote().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote().data(), static_cast<int>(this->quote().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Quote");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->quote(), target);
  }

  // double BaseMin = 3;
  if (this->basemin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->basemin(), target);
  }

  // int32 BasePrecision = 4;
  if (this->baseprecision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->baseprecision(), target);
  }

  // double QuoteMin = 5;
  if (this->quotemin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->quotemin(), target);
  }

  // int32 QuotePrecision = 6;
  if (this->quoteprecision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->quoteprecision(), target);
  }

  // string Maker = 7;
  if (this->maker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maker().data(), static_cast<int>(this->maker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Maker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->maker(), target);
  }

  // string Taker = 8;
  if (this->taker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taker().data(), static_cast<int>(this->taker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.InstrumentBody.Taker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->taker(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.InstrumentBody)
  return target;
}

size_t InstrumentBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.InstrumentBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Base = 1;
  if (this->base().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base());
  }

  // string Quote = 2;
  if (this->quote().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quote());
  }

  // string Maker = 7;
  if (this->maker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->maker());
  }

  // string Taker = 8;
  if (this->taker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taker());
  }

  // double BaseMin = 3;
  if (this->basemin() != 0) {
    total_size += 1 + 8;
  }

  // double QuoteMin = 5;
  if (this->quotemin() != 0) {
    total_size += 1 + 8;
  }

  // int32 BasePrecision = 4;
  if (this->baseprecision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->baseprecision());
  }

  // int32 QuotePrecision = 6;
  if (this->quoteprecision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quoteprecision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstrumentBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.InstrumentBody)
  GOOGLE_DCHECK_NE(&from, this);
  const InstrumentBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstrumentBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.InstrumentBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.InstrumentBody)
    MergeFrom(*source);
  }
}

void InstrumentBody::MergeFrom(const InstrumentBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.InstrumentBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base().size() > 0) {

    base_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_);
  }
  if (from.quote().size() > 0) {

    quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
  }
  if (from.maker().size() > 0) {

    maker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maker_);
  }
  if (from.taker().size() > 0) {

    taker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taker_);
  }
  if (from.basemin() != 0) {
    set_basemin(from.basemin());
  }
  if (from.quotemin() != 0) {
    set_quotemin(from.quotemin());
  }
  if (from.baseprecision() != 0) {
    set_baseprecision(from.baseprecision());
  }
  if (from.quoteprecision() != 0) {
    set_quoteprecision(from.quoteprecision());
  }
}

void InstrumentBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.InstrumentBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentBody::CopyFrom(const InstrumentBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.InstrumentBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstrumentBody::IsInitialized() const {
  return true;
}

void InstrumentBody::Swap(InstrumentBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstrumentBody::InternalSwap(InstrumentBody* other) {
  using std::swap;
  base_.Swap(&other->base_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quote_.Swap(&other->quote_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  maker_.Swap(&other->maker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  taker_.Swap(&other->taker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(basemin_, other->basemin_);
  swap(quotemin_, other->quotemin_);
  swap(baseprecision_, other->baseprecision_);
  swap(quoteprecision_, other->quoteprecision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstrumentBody::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse() {}
PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::MergeFrom(const PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[4];
}
void PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse() {}
PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::MergeFrom(const PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[5];
}
void PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PushLoginResponse_MessageBody::InitAsDefaultInstance() {
  ::models::_PushLoginResponse_MessageBody_default_instance_._instance.get_mutable()->balance_ = const_cast< ::models::BalanceBody*>(
      ::models::BalanceBody::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushLoginResponse_MessageBody::kBalanceFieldNumber;
const int PushLoginResponse_MessageBody::kInstrumentsFieldNumber;
const int PushLoginResponse_MessageBody::kPositionByMarketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushLoginResponse_MessageBody::PushLoginResponse_MessageBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse_MessageBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PushLoginResponse.MessageBody)
}
PushLoginResponse_MessageBody::PushLoginResponse_MessageBody(const PushLoginResponse_MessageBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instruments_.MergeFrom(from.instruments_);
  positionbymarket_.MergeFrom(from.positionbymarket_);
  if (from.has_balance()) {
    balance_ = new ::models::BalanceBody(*from.balance_);
  } else {
    balance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PushLoginResponse.MessageBody)
}

void PushLoginResponse_MessageBody::SharedCtor() {
  balance_ = NULL;
}

PushLoginResponse_MessageBody::~PushLoginResponse_MessageBody() {
  // @@protoc_insertion_point(destructor:models.PushLoginResponse.MessageBody)
  SharedDtor();
}

void PushLoginResponse_MessageBody::SharedDtor() {
  if (this != internal_default_instance()) delete balance_;
}

void PushLoginResponse_MessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushLoginResponse_MessageBody::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushLoginResponse_MessageBody& PushLoginResponse_MessageBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse_MessageBody.base);
  return *internal_default_instance();
}


void PushLoginResponse_MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PushLoginResponse.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instruments_.Clear();
  positionbymarket_.Clear();
  if (GetArenaNoVirtual() == NULL && balance_ != NULL) {
    delete balance_;
  }
  balance_ = NULL;
  _internal_metadata_.Clear();
}

bool PushLoginResponse_MessageBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PushLoginResponse.MessageBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.BalanceBody Balance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_balance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .models.InstrumentBody> Instruments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse,
              ::std::string, ::models::InstrumentBody,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::models::InstrumentBody > > parser(&instruments_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.PushLoginResponse.MessageBody.InstrumentsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, double> PositionByMarket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse,
              ::std::string, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::std::string, double > > parser(&positionbymarket_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.PushLoginResponse.MessageBody.PositionByMarketEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PushLoginResponse.MessageBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PushLoginResponse.MessageBody)
  return false;
#undef DO_
}

void PushLoginResponse_MessageBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PushLoginResponse.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.BalanceBody Balance = 1;
  if (this->has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_balance(), output);
  }

  // map<string, .models.InstrumentBody> Instruments = 2;
  if (!this->instruments().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.PushLoginResponse.MessageBody.InstrumentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->instruments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->instruments().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(instruments_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it) {
        entry.reset(instruments_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> PositionByMarket = 3;
  if (!this->positionbymarket().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.PushLoginResponse.MessageBody.PositionByMarketEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->positionbymarket().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->positionbymarket().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->positionbymarket().begin();
          it != this->positionbymarket().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(positionbymarket_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->positionbymarket().begin();
          it != this->positionbymarket().end(); ++it) {
        entry.reset(positionbymarket_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PushLoginResponse.MessageBody)
}

::google::protobuf::uint8* PushLoginResponse_MessageBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PushLoginResponse.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.BalanceBody Balance = 1;
  if (this->has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_balance(), deterministic, target);
  }

  // map<string, .models.InstrumentBody> Instruments = 2;
  if (!this->instruments().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.PushLoginResponse.MessageBody.InstrumentsEntry.key");
      }
    };

    if (deterministic &&
        this->instruments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->instruments().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(instruments_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it) {
        entry.reset(instruments_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> PositionByMarket = 3;
  if (!this->positionbymarket().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.PushLoginResponse.MessageBody.PositionByMarketEntry.key");
      }
    };

    if (deterministic &&
        this->positionbymarket().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->positionbymarket().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->positionbymarket().begin();
          it != this->positionbymarket().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(positionbymarket_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->positionbymarket().begin();
          it != this->positionbymarket().end(); ++it) {
        entry.reset(positionbymarket_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PushLoginResponse.MessageBody)
  return target;
}

size_t PushLoginResponse_MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PushLoginResponse.MessageBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .models.InstrumentBody> Instruments = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->instruments_size());
  {
    ::std::unique_ptr<PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
        it = this->instruments().begin();
        it != this->instruments().end(); ++it) {
      entry.reset(instruments_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, double> PositionByMarket = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->positionbymarket_size());
  {
    ::std::unique_ptr<PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->positionbymarket().begin();
        it != this->positionbymarket().end(); ++it) {
      entry.reset(positionbymarket_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .models.BalanceBody Balance = 1;
  if (this->has_balance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *balance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushLoginResponse_MessageBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PushLoginResponse.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PushLoginResponse_MessageBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushLoginResponse_MessageBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PushLoginResponse.MessageBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PushLoginResponse.MessageBody)
    MergeFrom(*source);
  }
}

void PushLoginResponse_MessageBody::MergeFrom(const PushLoginResponse_MessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PushLoginResponse.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instruments_.MergeFrom(from.instruments_);
  positionbymarket_.MergeFrom(from.positionbymarket_);
  if (from.has_balance()) {
    mutable_balance()->::models::BalanceBody::MergeFrom(from.balance());
  }
}

void PushLoginResponse_MessageBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PushLoginResponse.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushLoginResponse_MessageBody::CopyFrom(const PushLoginResponse_MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PushLoginResponse.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushLoginResponse_MessageBody::IsInitialized() const {
  return true;
}

void PushLoginResponse_MessageBody::Swap(PushLoginResponse_MessageBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushLoginResponse_MessageBody::InternalSwap(PushLoginResponse_MessageBody* other) {
  using std::swap;
  instruments_.Swap(&other->instruments_);
  positionbymarket_.Swap(&other->positionbymarket_);
  swap(balance_, other->balance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushLoginResponse_MessageBody::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushLoginResponse::InitAsDefaultInstance() {
  ::models::_PushLoginResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PushLoginResponse_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::PushLoginResponse_MessageBody*>(
      ::models::PushLoginResponse_MessageBody::internal_default_instance());
}
void PushLoginResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushLoginResponse::kHeaderFieldNumber;
const int PushLoginResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushLoginResponse::PushLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PushLoginResponse)
}
PushLoginResponse::PushLoginResponse(const PushLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::PushLoginResponse_MessageBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PushLoginResponse)
}

void PushLoginResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PushLoginResponse::~PushLoginResponse() {
  // @@protoc_insertion_point(destructor:models.PushLoginResponse)
  SharedDtor();
}

void PushLoginResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PushLoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushLoginResponse::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushLoginResponse& PushLoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_PushLoginResponse.base);
  return *internal_default_instance();
}


void PushLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PushLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PushLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PushLoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.PushLoginResponse.MessageBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PushLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PushLoginResponse)
  return false;
#undef DO_
}

void PushLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PushLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.PushLoginResponse.MessageBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PushLoginResponse)
}

::google::protobuf::uint8* PushLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PushLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.PushLoginResponse.MessageBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PushLoginResponse)
  return target;
}

size_t PushLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PushLoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.PushLoginResponse.MessageBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PushLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PushLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PushLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PushLoginResponse)
    MergeFrom(*source);
  }
}

void PushLoginResponse::MergeFrom(const PushLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PushLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::PushLoginResponse_MessageBody::MergeFrom(from.body());
  }
}

void PushLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PushLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushLoginResponse::CopyFrom(const PushLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PushLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushLoginResponse::IsInitialized() const {
  return true;
}

void PushLoginResponse::Swap(PushLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushLoginResponse::InternalSwap(PushLoginResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushLoginResponse::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullOrdersResponse::InitAsDefaultInstance() {
  ::models::_PullOrdersResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
}
void PullOrdersResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void PullOrdersResponse::clear_body() {
  body_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullOrdersResponse::kHeaderFieldNumber;
const int PullOrdersResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullOrdersResponse::PullOrdersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_PullOrdersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullOrdersResponse)
}
PullOrdersResponse::PullOrdersResponse(const PullOrdersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      body_(from.body_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PullOrdersResponse)
}

void PullOrdersResponse::SharedCtor() {
  header_ = NULL;
}

PullOrdersResponse::~PullOrdersResponse() {
  // @@protoc_insertion_point(destructor:models.PullOrdersResponse)
  SharedDtor();
}

void PullOrdersResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void PullOrdersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullOrdersResponse::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullOrdersResponse& PullOrdersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_PullOrdersResponse.base);
  return *internal_default_instance();
}


void PullOrdersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullOrdersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool PullOrdersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullOrdersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .models.Order Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullOrdersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullOrdersResponse)
  return false;
#undef DO_
}

void PullOrdersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullOrdersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .models.Order Body = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->body(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullOrdersResponse)
}

::google::protobuf::uint8* PullOrdersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullOrdersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .models.Order Body = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->body(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullOrdersResponse)
  return target;
}

size_t PullOrdersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullOrdersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .models.Order Body = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->body_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->body(static_cast<int>(i)));
    }
  }

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullOrdersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullOrdersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PullOrdersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullOrdersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullOrdersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullOrdersResponse)
    MergeFrom(*source);
  }
}

void PullOrdersResponse::MergeFrom(const PullOrdersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullOrdersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  body_.MergeFrom(from.body_);
  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
}

void PullOrdersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullOrdersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullOrdersResponse::CopyFrom(const PullOrdersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullOrdersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullOrdersResponse::IsInitialized() const {
  return true;
}

void PullOrdersResponse::Swap(PullOrdersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullOrdersResponse::InternalSwap(PullOrdersResponse* other) {
  using std::swap;
  CastToBase(&body_)->InternalSwap(CastToBase(&other->body_));
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullOrdersResponse::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullBalancesResponse::InitAsDefaultInstance() {
  ::models::_PullBalancesResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PullBalancesResponse_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::BalanceBody*>(
      ::models::BalanceBody::internal_default_instance());
}
void PullBalancesResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullBalancesResponse::kHeaderFieldNumber;
const int PullBalancesResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullBalancesResponse::PullBalancesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_PullBalancesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullBalancesResponse)
}
PullBalancesResponse::PullBalancesResponse(const PullBalancesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::BalanceBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PullBalancesResponse)
}

void PullBalancesResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PullBalancesResponse::~PullBalancesResponse() {
  // @@protoc_insertion_point(destructor:models.PullBalancesResponse)
  SharedDtor();
}

void PullBalancesResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PullBalancesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullBalancesResponse::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullBalancesResponse& PullBalancesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_PullBalancesResponse.base);
  return *internal_default_instance();
}


void PullBalancesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullBalancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PullBalancesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullBalancesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.BalanceBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullBalancesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullBalancesResponse)
  return false;
#undef DO_
}

void PullBalancesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullBalancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.BalanceBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullBalancesResponse)
}

::google::protobuf::uint8* PullBalancesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullBalancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.BalanceBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullBalancesResponse)
  return target;
}

size_t PullBalancesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullBalancesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.BalanceBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullBalancesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullBalancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PullBalancesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullBalancesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullBalancesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullBalancesResponse)
    MergeFrom(*source);
  }
}

void PullBalancesResponse::MergeFrom(const PullBalancesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullBalancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::BalanceBody::MergeFrom(from.body());
  }
}

void PullBalancesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullBalancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullBalancesResponse::CopyFrom(const PullBalancesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullBalancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullBalancesResponse::IsInitialized() const {
  return true;
}

void PullBalancesResponse::Swap(PullBalancesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullBalancesResponse::InternalSwap(PullBalancesResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullBalancesResponse::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse() {}
PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::MergeFrom(const PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[10];
}
void PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PullMarketsResponse_MessageBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullMarketsResponse_MessageBody::kInstrumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullMarketsResponse_MessageBody::PullMarketsResponse_MessageBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_PullMarketsResponse_MessageBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullMarketsResponse.MessageBody)
}
PullMarketsResponse_MessageBody::PullMarketsResponse_MessageBody(const PullMarketsResponse_MessageBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instruments_.MergeFrom(from.instruments_);
  // @@protoc_insertion_point(copy_constructor:models.PullMarketsResponse.MessageBody)
}

void PullMarketsResponse_MessageBody::SharedCtor() {
}

PullMarketsResponse_MessageBody::~PullMarketsResponse_MessageBody() {
  // @@protoc_insertion_point(destructor:models.PullMarketsResponse.MessageBody)
  SharedDtor();
}

void PullMarketsResponse_MessageBody::SharedDtor() {
}

void PullMarketsResponse_MessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullMarketsResponse_MessageBody::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullMarketsResponse_MessageBody& PullMarketsResponse_MessageBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_PullMarketsResponse_MessageBody.base);
  return *internal_default_instance();
}


void PullMarketsResponse_MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullMarketsResponse.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instruments_.Clear();
  _internal_metadata_.Clear();
}

bool PullMarketsResponse_MessageBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullMarketsResponse.MessageBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .models.InstrumentBody> Instruments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse,
              ::std::string, ::models::InstrumentBody,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::models::InstrumentBody > > parser(&instruments_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.PullMarketsResponse.MessageBody.InstrumentsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullMarketsResponse.MessageBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullMarketsResponse.MessageBody)
  return false;
#undef DO_
}

void PullMarketsResponse_MessageBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullMarketsResponse.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .models.InstrumentBody> Instruments = 1;
  if (!this->instruments().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.PullMarketsResponse.MessageBody.InstrumentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->instruments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->instruments().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(instruments_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it) {
        entry.reset(instruments_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullMarketsResponse.MessageBody)
}

::google::protobuf::uint8* PullMarketsResponse_MessageBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullMarketsResponse.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .models.InstrumentBody> Instruments = 1;
  if (!this->instruments().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "models.PullMarketsResponse.MessageBody.InstrumentsEntry.key");
      }
    };

    if (deterministic &&
        this->instruments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->instruments().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(instruments_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
          it = this->instruments().begin();
          it != this->instruments().end(); ++it) {
        entry.reset(instruments_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullMarketsResponse.MessageBody)
  return target;
}

size_t PullMarketsResponse_MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullMarketsResponse.MessageBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .models.InstrumentBody> Instruments = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->instruments_size());
  {
    ::std::unique_ptr<PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::models::InstrumentBody >::const_iterator
        it = this->instruments().begin();
        it != this->instruments().end(); ++it) {
      entry.reset(instruments_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullMarketsResponse_MessageBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullMarketsResponse.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PullMarketsResponse_MessageBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullMarketsResponse_MessageBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullMarketsResponse.MessageBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullMarketsResponse.MessageBody)
    MergeFrom(*source);
  }
}

void PullMarketsResponse_MessageBody::MergeFrom(const PullMarketsResponse_MessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullMarketsResponse.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instruments_.MergeFrom(from.instruments_);
}

void PullMarketsResponse_MessageBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullMarketsResponse.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullMarketsResponse_MessageBody::CopyFrom(const PullMarketsResponse_MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullMarketsResponse.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullMarketsResponse_MessageBody::IsInitialized() const {
  return true;
}

void PullMarketsResponse_MessageBody::Swap(PullMarketsResponse_MessageBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullMarketsResponse_MessageBody::InternalSwap(PullMarketsResponse_MessageBody* other) {
  using std::swap;
  instruments_.Swap(&other->instruments_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullMarketsResponse_MessageBody::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullMarketsResponse::InitAsDefaultInstance() {
  ::models::_PullMarketsResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_PullMarketsResponse_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::PullMarketsResponse_MessageBody*>(
      ::models::PullMarketsResponse_MessageBody::internal_default_instance());
}
void PullMarketsResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullMarketsResponse::kHeaderFieldNumber;
const int PullMarketsResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullMarketsResponse::PullMarketsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_PullMarketsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.PullMarketsResponse)
}
PullMarketsResponse::PullMarketsResponse(const PullMarketsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::PullMarketsResponse_MessageBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.PullMarketsResponse)
}

void PullMarketsResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

PullMarketsResponse::~PullMarketsResponse() {
  // @@protoc_insertion_point(destructor:models.PullMarketsResponse)
  SharedDtor();
}

void PullMarketsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void PullMarketsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullMarketsResponse::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullMarketsResponse& PullMarketsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_PullMarketsResponse.base);
  return *internal_default_instance();
}


void PullMarketsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:models.PullMarketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool PullMarketsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.PullMarketsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.PullMarketsResponse.MessageBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.PullMarketsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.PullMarketsResponse)
  return false;
#undef DO_
}

void PullMarketsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.PullMarketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.PullMarketsResponse.MessageBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.PullMarketsResponse)
}

::google::protobuf::uint8* PullMarketsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.PullMarketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.PullMarketsResponse.MessageBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.PullMarketsResponse)
  return target;
}

size_t PullMarketsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.PullMarketsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.PullMarketsResponse.MessageBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullMarketsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.PullMarketsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PullMarketsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullMarketsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.PullMarketsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.PullMarketsResponse)
    MergeFrom(*source);
  }
}

void PullMarketsResponse::MergeFrom(const PullMarketsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.PullMarketsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::PullMarketsResponse_MessageBody::MergeFrom(from.body());
  }
}

void PullMarketsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.PullMarketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullMarketsResponse::CopyFrom(const PullMarketsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.PullMarketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullMarketsResponse::IsInitialized() const {
  return true;
}

void PullMarketsResponse::Swap(PullMarketsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullMarketsResponse::InternalSwap(PullMarketsResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullMarketsResponse::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TradeIndicatorMessage::InitAsDefaultInstance() {
  ::models::_TradeIndicatorMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
}
void TradeIndicatorMessage::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void TradeIndicatorMessage::clear_body() {
  body_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TradeIndicatorMessage::kHeaderFieldNumber;
const int TradeIndicatorMessage::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TradeIndicatorMessage::TradeIndicatorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_TradeIndicatorMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.TradeIndicatorMessage)
}
TradeIndicatorMessage::TradeIndicatorMessage(const TradeIndicatorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      body_(from.body_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.TradeIndicatorMessage)
}

void TradeIndicatorMessage::SharedCtor() {
  header_ = NULL;
}

TradeIndicatorMessage::~TradeIndicatorMessage() {
  // @@protoc_insertion_point(destructor:models.TradeIndicatorMessage)
  SharedDtor();
}

void TradeIndicatorMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void TradeIndicatorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TradeIndicatorMessage::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TradeIndicatorMessage& TradeIndicatorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_TradeIndicatorMessage.base);
  return *internal_default_instance();
}


void TradeIndicatorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:models.TradeIndicatorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool TradeIndicatorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.TradeIndicatorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .models.TradeIndicator Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.TradeIndicatorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.TradeIndicatorMessage)
  return false;
#undef DO_
}

void TradeIndicatorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.TradeIndicatorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .models.TradeIndicator Body = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->body(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.TradeIndicatorMessage)
}

::google::protobuf::uint8* TradeIndicatorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.TradeIndicatorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .models.TradeIndicator Body = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->body(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.TradeIndicatorMessage)
  return target;
}

size_t TradeIndicatorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.TradeIndicatorMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .models.TradeIndicator Body = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->body_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->body(static_cast<int>(i)));
    }
  }

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TradeIndicatorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.TradeIndicatorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TradeIndicatorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TradeIndicatorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.TradeIndicatorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.TradeIndicatorMessage)
    MergeFrom(*source);
  }
}

void TradeIndicatorMessage::MergeFrom(const TradeIndicatorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.TradeIndicatorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  body_.MergeFrom(from.body_);
  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
}

void TradeIndicatorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.TradeIndicatorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeIndicatorMessage::CopyFrom(const TradeIndicatorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.TradeIndicatorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeIndicatorMessage::IsInitialized() const {
  return true;
}

void TradeIndicatorMessage::Swap(TradeIndicatorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TradeIndicatorMessage::InternalSwap(TradeIndicatorMessage* other) {
  using std::swap;
  CastToBase(&body_)->InternalSwap(CastToBase(&other->body_));
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TradeIndicatorMessage::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenOrdersIndicatorMessage::InitAsDefaultInstance() {
  ::models::_OpenOrdersIndicatorMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
}
void OpenOrdersIndicatorMessage::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void OpenOrdersIndicatorMessage::clear_body() {
  body_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenOrdersIndicatorMessage::kHeaderFieldNumber;
const int OpenOrdersIndicatorMessage::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenOrdersIndicatorMessage::OpenOrdersIndicatorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fbroker_2eproto::scc_info_OpenOrdersIndicatorMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.OpenOrdersIndicatorMessage)
}
OpenOrdersIndicatorMessage::OpenOrdersIndicatorMessage(const OpenOrdersIndicatorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      body_(from.body_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.OpenOrdersIndicatorMessage)
}

void OpenOrdersIndicatorMessage::SharedCtor() {
  header_ = NULL;
}

OpenOrdersIndicatorMessage::~OpenOrdersIndicatorMessage() {
  // @@protoc_insertion_point(destructor:models.OpenOrdersIndicatorMessage)
  SharedDtor();
}

void OpenOrdersIndicatorMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void OpenOrdersIndicatorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpenOrdersIndicatorMessage::descriptor() {
  ::protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenOrdersIndicatorMessage& OpenOrdersIndicatorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fbroker_2eproto::scc_info_OpenOrdersIndicatorMessage.base);
  return *internal_default_instance();
}


void OpenOrdersIndicatorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:models.OpenOrdersIndicatorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool OpenOrdersIndicatorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.OpenOrdersIndicatorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .models.Order Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.OpenOrdersIndicatorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.OpenOrdersIndicatorMessage)
  return false;
#undef DO_
}

void OpenOrdersIndicatorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.OpenOrdersIndicatorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .models.Order Body = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->body(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.OpenOrdersIndicatorMessage)
}

::google::protobuf::uint8* OpenOrdersIndicatorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.OpenOrdersIndicatorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .models.Order Body = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->body(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.OpenOrdersIndicatorMessage)
  return target;
}

size_t OpenOrdersIndicatorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.OpenOrdersIndicatorMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .models.Order Body = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->body_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->body(static_cast<int>(i)));
    }
  }

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenOrdersIndicatorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.OpenOrdersIndicatorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenOrdersIndicatorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenOrdersIndicatorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.OpenOrdersIndicatorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.OpenOrdersIndicatorMessage)
    MergeFrom(*source);
  }
}

void OpenOrdersIndicatorMessage::MergeFrom(const OpenOrdersIndicatorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.OpenOrdersIndicatorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  body_.MergeFrom(from.body_);
  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
}

void OpenOrdersIndicatorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.OpenOrdersIndicatorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenOrdersIndicatorMessage::CopyFrom(const OpenOrdersIndicatorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.OpenOrdersIndicatorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenOrdersIndicatorMessage::IsInitialized() const {
  return true;
}

void OpenOrdersIndicatorMessage::Swap(OpenOrdersIndicatorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenOrdersIndicatorMessage::InternalSwap(OpenOrdersIndicatorMessage* other) {
  using std::swap;
  CastToBase(&body_)->InternalSwap(CastToBase(&other->body_));
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpenOrdersIndicatorMessage::GetMetadata() const {
  protobuf_messages_5fbroker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fbroker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace models
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::BalanceBody_TotalEntry_DoNotUse* Arena::CreateMaybeMessage< ::models::BalanceBody_TotalEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::models::BalanceBody_TotalEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::BalanceBody_AvailableEntry_DoNotUse* Arena::CreateMaybeMessage< ::models::BalanceBody_AvailableEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::models::BalanceBody_AvailableEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::BalanceBody* Arena::CreateMaybeMessage< ::models::BalanceBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::BalanceBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::InstrumentBody* Arena::CreateMaybeMessage< ::models::InstrumentBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::InstrumentBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushLoginResponse_MessageBody_InstrumentsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse* Arena::CreateMaybeMessage< ::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushLoginResponse_MessageBody_PositionByMarketEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushLoginResponse_MessageBody* Arena::CreateMaybeMessage< ::models::PushLoginResponse_MessageBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushLoginResponse_MessageBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PushLoginResponse* Arena::CreateMaybeMessage< ::models::PushLoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PushLoginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullOrdersResponse* Arena::CreateMaybeMessage< ::models::PullOrdersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullOrdersResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullBalancesResponse* Arena::CreateMaybeMessage< ::models::PullBalancesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullBalancesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullMarketsResponse_MessageBody_InstrumentsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullMarketsResponse_MessageBody* Arena::CreateMaybeMessage< ::models::PullMarketsResponse_MessageBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullMarketsResponse_MessageBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::PullMarketsResponse* Arena::CreateMaybeMessage< ::models::PullMarketsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::models::PullMarketsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::TradeIndicatorMessage* Arena::CreateMaybeMessage< ::models::TradeIndicatorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::models::TradeIndicatorMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::OpenOrdersIndicatorMessage* Arena::CreateMaybeMessage< ::models::OpenOrdersIndicatorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::models::OpenOrdersIndicatorMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
