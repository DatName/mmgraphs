// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: marketdata.proto

#ifndef PROTOBUF_INCLUDED_marketdata_2eproto
#define PROTOBUF_INCLUDED_marketdata_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "order.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto 

namespace protobuf_marketdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_marketdata_2eproto
namespace models {
class Level2Info;
class Level2InfoDefaultTypeInternal;
extern Level2InfoDefaultTypeInternal _Level2Info_default_instance_;
class Level2Snapshot;
class Level2SnapshotDefaultTypeInternal;
extern Level2SnapshotDefaultTypeInternal _Level2Snapshot_default_instance_;
class Level2Snapshot_AsksEntry_DoNotUse;
class Level2Snapshot_AsksEntry_DoNotUseDefaultTypeInternal;
extern Level2Snapshot_AsksEntry_DoNotUseDefaultTypeInternal _Level2Snapshot_AsksEntry_DoNotUse_default_instance_;
class Level2Snapshot_BidsEntry_DoNotUse;
class Level2Snapshot_BidsEntry_DoNotUseDefaultTypeInternal;
extern Level2Snapshot_BidsEntry_DoNotUseDefaultTypeInternal _Level2Snapshot_BidsEntry_DoNotUse_default_instance_;
class Level2Trade;
class Level2TradeDefaultTypeInternal;
extern Level2TradeDefaultTypeInternal _Level2Trade_default_instance_;
class Level2Update;
class Level2UpdateDefaultTypeInternal;
extern Level2UpdateDefaultTypeInternal _Level2Update_default_instance_;
}  // namespace models
namespace google {
namespace protobuf {
template<> ::models::Level2Info* Arena::CreateMaybeMessage<::models::Level2Info>(Arena*);
template<> ::models::Level2Snapshot* Arena::CreateMaybeMessage<::models::Level2Snapshot>(Arena*);
template<> ::models::Level2Snapshot_AsksEntry_DoNotUse* Arena::CreateMaybeMessage<::models::Level2Snapshot_AsksEntry_DoNotUse>(Arena*);
template<> ::models::Level2Snapshot_BidsEntry_DoNotUse* Arena::CreateMaybeMessage<::models::Level2Snapshot_BidsEntry_DoNotUse>(Arena*);
template<> ::models::Level2Trade* Arena::CreateMaybeMessage<::models::Level2Trade>(Arena*);
template<> ::models::Level2Update* Arena::CreateMaybeMessage<::models::Level2Update>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace models {

// ===================================================================

class Level2Snapshot_BidsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Level2Snapshot_BidsEntry_DoNotUse, 
    ::google::protobuf::int32, ::models::Level2Info,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Level2Snapshot_BidsEntry_DoNotUse, 
    ::google::protobuf::int32, ::models::Level2Info,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Level2Snapshot_BidsEntry_DoNotUse();
  Level2Snapshot_BidsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Level2Snapshot_BidsEntry_DoNotUse& other);
  static const Level2Snapshot_BidsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Level2Snapshot_BidsEntry_DoNotUse*>(&_Level2Snapshot_BidsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Level2Snapshot_AsksEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Level2Snapshot_AsksEntry_DoNotUse, 
    ::google::protobuf::int32, ::models::Level2Info,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Level2Snapshot_AsksEntry_DoNotUse, 
    ::google::protobuf::int32, ::models::Level2Info,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Level2Snapshot_AsksEntry_DoNotUse();
  Level2Snapshot_AsksEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Level2Snapshot_AsksEntry_DoNotUse& other);
  static const Level2Snapshot_AsksEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Level2Snapshot_AsksEntry_DoNotUse*>(&_Level2Snapshot_AsksEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Level2Snapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.Level2Snapshot) */ {
 public:
  Level2Snapshot();
  virtual ~Level2Snapshot();

  Level2Snapshot(const Level2Snapshot& from);

  inline Level2Snapshot& operator=(const Level2Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Level2Snapshot(Level2Snapshot&& from) noexcept
    : Level2Snapshot() {
    *this = ::std::move(from);
  }

  inline Level2Snapshot& operator=(Level2Snapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Level2Snapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Level2Snapshot* internal_default_instance() {
    return reinterpret_cast<const Level2Snapshot*>(
               &_Level2Snapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Level2Snapshot* other);
  friend void swap(Level2Snapshot& a, Level2Snapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Level2Snapshot* New() const final {
    return CreateMaybeMessage<Level2Snapshot>(NULL);
  }

  Level2Snapshot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Level2Snapshot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Level2Snapshot& from);
  void MergeFrom(const Level2Snapshot& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Level2Snapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .models.Level2Info> Bids = 4;
  int bids_size() const;
  void clear_bids();
  static const int kBidsFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >&
      bids() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >*
      mutable_bids();

  // map<int32, .models.Level2Info> Asks = 5;
  int asks_size() const;
  void clear_asks();
  static const int kAsksFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >&
      asks() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >*
      mutable_asks();

  // string Symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string Exchange = 2;
  void clear_exchange();
  static const int kExchangeFieldNumber = 2;
  const ::std::string& exchange() const;
  void set_exchange(const ::std::string& value);
  #if LANG_CXX11
  void set_exchange(::std::string&& value);
  #endif
  void set_exchange(const char* value);
  void set_exchange(const char* value, size_t size);
  ::std::string* mutable_exchange();
  ::std::string* release_exchange();
  void set_allocated_exchange(::std::string* exchange);

  // string Timestamp = 3;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // @@protoc_insertion_point(class_scope:models.Level2Snapshot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Level2Snapshot_BidsEntry_DoNotUse,
      ::google::protobuf::int32, ::models::Level2Info,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bids_;
  ::google::protobuf::internal::MapField<
      Level2Snapshot_AsksEntry_DoNotUse,
      ::google::protobuf::int32, ::models::Level2Info,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > asks_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr exchange_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_marketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Level2Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.Level2Info) */ {
 public:
  Level2Info();
  virtual ~Level2Info();

  Level2Info(const Level2Info& from);

  inline Level2Info& operator=(const Level2Info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Level2Info(Level2Info&& from) noexcept
    : Level2Info() {
    *this = ::std::move(from);
  }

  inline Level2Info& operator=(Level2Info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Level2Info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Level2Info* internal_default_instance() {
    return reinterpret_cast<const Level2Info*>(
               &_Level2Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Level2Info* other);
  friend void swap(Level2Info& a, Level2Info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Level2Info* New() const final {
    return CreateMaybeMessage<Level2Info>(NULL);
  }

  Level2Info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Level2Info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Level2Info& from);
  void MergeFrom(const Level2Info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Level2Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double Price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  double price() const;
  void set_price(double value);

  // double Size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  double size() const;
  void set_size(double value);

  // @@protoc_insertion_point(class_scope:models.Level2Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double price_;
  double size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_marketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Level2Update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.Level2Update) */ {
 public:
  Level2Update();
  virtual ~Level2Update();

  Level2Update(const Level2Update& from);

  inline Level2Update& operator=(const Level2Update& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Level2Update(Level2Update&& from) noexcept
    : Level2Update() {
    *this = ::std::move(from);
  }

  inline Level2Update& operator=(Level2Update&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Level2Update& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Level2Update* internal_default_instance() {
    return reinterpret_cast<const Level2Update*>(
               &_Level2Update_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Level2Update* other);
  friend void swap(Level2Update& a, Level2Update& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Level2Update* New() const final {
    return CreateMaybeMessage<Level2Update>(NULL);
  }

  Level2Update* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Level2Update>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Level2Update& from);
  void MergeFrom(const Level2Update& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Level2Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string Exchange = 2;
  void clear_exchange();
  static const int kExchangeFieldNumber = 2;
  const ::std::string& exchange() const;
  void set_exchange(const ::std::string& value);
  #if LANG_CXX11
  void set_exchange(::std::string&& value);
  #endif
  void set_exchange(const char* value);
  void set_exchange(const char* value, size_t size);
  ::std::string* mutable_exchange();
  ::std::string* release_exchange();
  void set_allocated_exchange(::std::string* exchange);

  // string Timestamp = 3;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // .models.Level2Info Info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  private:
  const ::models::Level2Info& _internal_info() const;
  public:
  const ::models::Level2Info& info() const;
  ::models::Level2Info* release_info();
  ::models::Level2Info* mutable_info();
  void set_allocated_info(::models::Level2Info* info);

  // @@protoc_insertion_point(class_scope:models.Level2Update)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr exchange_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  ::models::Level2Info* info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_marketdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Level2Trade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:models.Level2Trade) */ {
 public:
  Level2Trade();
  virtual ~Level2Trade();

  Level2Trade(const Level2Trade& from);

  inline Level2Trade& operator=(const Level2Trade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Level2Trade(Level2Trade&& from) noexcept
    : Level2Trade() {
    *this = ::std::move(from);
  }

  inline Level2Trade& operator=(Level2Trade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Level2Trade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Level2Trade* internal_default_instance() {
    return reinterpret_cast<const Level2Trade*>(
               &_Level2Trade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Level2Trade* other);
  friend void swap(Level2Trade& a, Level2Trade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Level2Trade* New() const final {
    return CreateMaybeMessage<Level2Trade>(NULL);
  }

  Level2Trade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Level2Trade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Level2Trade& from);
  void MergeFrom(const Level2Trade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Level2Trade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // double Price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  double price() const;
  void set_price(double value);

  // double Size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  double size() const;
  void set_size(double value);

  // int64 Timestamp = 5;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // .models.OrderSide Side = 4;
  void clear_side();
  static const int kSideFieldNumber = 4;
  ::models::OrderSide side() const;
  void set_side(::models::OrderSide value);

  // @@protoc_insertion_point(class_scope:models.Level2Trade)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  double price_;
  double size_;
  ::google::protobuf::int64 timestamp_;
  int side_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_marketdata_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Level2Snapshot

// string Symbol = 1;
inline void Level2Snapshot::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Snapshot::symbol() const {
  // @@protoc_insertion_point(field_get:models.Level2Snapshot.Symbol)
  return symbol_.GetNoArena();
}
inline void Level2Snapshot::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Snapshot.Symbol)
}
#if LANG_CXX11
inline void Level2Snapshot::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Snapshot.Symbol)
}
#endif
inline void Level2Snapshot::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Snapshot.Symbol)
}
inline void Level2Snapshot::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Snapshot.Symbol)
}
inline ::std::string* Level2Snapshot::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Snapshot.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Snapshot::release_symbol() {
  // @@protoc_insertion_point(field_release:models.Level2Snapshot.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Snapshot::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Snapshot.Symbol)
}

// string Exchange = 2;
inline void Level2Snapshot::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Snapshot::exchange() const {
  // @@protoc_insertion_point(field_get:models.Level2Snapshot.Exchange)
  return exchange_.GetNoArena();
}
inline void Level2Snapshot::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Snapshot.Exchange)
}
#if LANG_CXX11
inline void Level2Snapshot::set_exchange(::std::string&& value) {
  
  exchange_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Snapshot.Exchange)
}
#endif
inline void Level2Snapshot::set_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Snapshot.Exchange)
}
inline void Level2Snapshot::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Snapshot.Exchange)
}
inline ::std::string* Level2Snapshot::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Snapshot.Exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Snapshot::release_exchange() {
  // @@protoc_insertion_point(field_release:models.Level2Snapshot.Exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Snapshot::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Snapshot.Exchange)
}

// string Timestamp = 3;
inline void Level2Snapshot::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Snapshot::timestamp() const {
  // @@protoc_insertion_point(field_get:models.Level2Snapshot.Timestamp)
  return timestamp_.GetNoArena();
}
inline void Level2Snapshot::set_timestamp(const ::std::string& value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Snapshot.Timestamp)
}
#if LANG_CXX11
inline void Level2Snapshot::set_timestamp(::std::string&& value) {
  
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Snapshot.Timestamp)
}
#endif
inline void Level2Snapshot::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Snapshot.Timestamp)
}
inline void Level2Snapshot::set_timestamp(const char* value, size_t size) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Snapshot.Timestamp)
}
inline ::std::string* Level2Snapshot::mutable_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Snapshot.Timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Snapshot::release_timestamp() {
  // @@protoc_insertion_point(field_release:models.Level2Snapshot.Timestamp)
  
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Snapshot::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    
  } else {
    
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Snapshot.Timestamp)
}

// map<int32, .models.Level2Info> Bids = 4;
inline int Level2Snapshot::bids_size() const {
  return bids_.size();
}
inline void Level2Snapshot::clear_bids() {
  bids_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >&
Level2Snapshot::bids() const {
  // @@protoc_insertion_point(field_map:models.Level2Snapshot.Bids)
  return bids_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >*
Level2Snapshot::mutable_bids() {
  // @@protoc_insertion_point(field_mutable_map:models.Level2Snapshot.Bids)
  return bids_.MutableMap();
}

// map<int32, .models.Level2Info> Asks = 5;
inline int Level2Snapshot::asks_size() const {
  return asks_.size();
}
inline void Level2Snapshot::clear_asks() {
  asks_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >&
Level2Snapshot::asks() const {
  // @@protoc_insertion_point(field_map:models.Level2Snapshot.Asks)
  return asks_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::models::Level2Info >*
Level2Snapshot::mutable_asks() {
  // @@protoc_insertion_point(field_mutable_map:models.Level2Snapshot.Asks)
  return asks_.MutableMap();
}

// -------------------------------------------------------------------

// Level2Info

// double Price = 1;
inline void Level2Info::clear_price() {
  price_ = 0;
}
inline double Level2Info::price() const {
  // @@protoc_insertion_point(field_get:models.Level2Info.Price)
  return price_;
}
inline void Level2Info::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:models.Level2Info.Price)
}

// double Size = 2;
inline void Level2Info::clear_size() {
  size_ = 0;
}
inline double Level2Info::size() const {
  // @@protoc_insertion_point(field_get:models.Level2Info.Size)
  return size_;
}
inline void Level2Info::set_size(double value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:models.Level2Info.Size)
}

// -------------------------------------------------------------------

// Level2Update

// string Symbol = 1;
inline void Level2Update::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Update::symbol() const {
  // @@protoc_insertion_point(field_get:models.Level2Update.Symbol)
  return symbol_.GetNoArena();
}
inline void Level2Update::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Update.Symbol)
}
#if LANG_CXX11
inline void Level2Update::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Update.Symbol)
}
#endif
inline void Level2Update::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Update.Symbol)
}
inline void Level2Update::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Update.Symbol)
}
inline ::std::string* Level2Update::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Update.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Update::release_symbol() {
  // @@protoc_insertion_point(field_release:models.Level2Update.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Update::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Update.Symbol)
}

// string Exchange = 2;
inline void Level2Update::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Update::exchange() const {
  // @@protoc_insertion_point(field_get:models.Level2Update.Exchange)
  return exchange_.GetNoArena();
}
inline void Level2Update::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Update.Exchange)
}
#if LANG_CXX11
inline void Level2Update::set_exchange(::std::string&& value) {
  
  exchange_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Update.Exchange)
}
#endif
inline void Level2Update::set_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Update.Exchange)
}
inline void Level2Update::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Update.Exchange)
}
inline ::std::string* Level2Update::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Update.Exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Update::release_exchange() {
  // @@protoc_insertion_point(field_release:models.Level2Update.Exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Update::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Update.Exchange)
}

// string Timestamp = 3;
inline void Level2Update::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Update::timestamp() const {
  // @@protoc_insertion_point(field_get:models.Level2Update.Timestamp)
  return timestamp_.GetNoArena();
}
inline void Level2Update::set_timestamp(const ::std::string& value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Update.Timestamp)
}
#if LANG_CXX11
inline void Level2Update::set_timestamp(::std::string&& value) {
  
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Update.Timestamp)
}
#endif
inline void Level2Update::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Update.Timestamp)
}
inline void Level2Update::set_timestamp(const char* value, size_t size) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Update.Timestamp)
}
inline ::std::string* Level2Update::mutable_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Update.Timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Update::release_timestamp() {
  // @@protoc_insertion_point(field_release:models.Level2Update.Timestamp)
  
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Update::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    
  } else {
    
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Update.Timestamp)
}

// .models.Level2Info Info = 4;
inline bool Level2Update::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void Level2Update::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::models::Level2Info& Level2Update::_internal_info() const {
  return *info_;
}
inline const ::models::Level2Info& Level2Update::info() const {
  const ::models::Level2Info* p = info_;
  // @@protoc_insertion_point(field_get:models.Level2Update.Info)
  return p != NULL ? *p : *reinterpret_cast<const ::models::Level2Info*>(
      &::models::_Level2Info_default_instance_);
}
inline ::models::Level2Info* Level2Update::release_info() {
  // @@protoc_insertion_point(field_release:models.Level2Update.Info)
  
  ::models::Level2Info* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::models::Level2Info* Level2Update::mutable_info() {
  
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::models::Level2Info>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:models.Level2Update.Info)
  return info_;
}
inline void Level2Update::set_allocated_info(::models::Level2Info* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:models.Level2Update.Info)
}

// -------------------------------------------------------------------

// Level2Trade

// string Symbol = 1;
inline void Level2Trade::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Level2Trade::symbol() const {
  // @@protoc_insertion_point(field_get:models.Level2Trade.Symbol)
  return symbol_.GetNoArena();
}
inline void Level2Trade::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:models.Level2Trade.Symbol)
}
#if LANG_CXX11
inline void Level2Trade::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:models.Level2Trade.Symbol)
}
#endif
inline void Level2Trade::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:models.Level2Trade.Symbol)
}
inline void Level2Trade::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:models.Level2Trade.Symbol)
}
inline ::std::string* Level2Trade::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:models.Level2Trade.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Level2Trade::release_symbol() {
  // @@protoc_insertion_point(field_release:models.Level2Trade.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Level2Trade::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:models.Level2Trade.Symbol)
}

// double Price = 2;
inline void Level2Trade::clear_price() {
  price_ = 0;
}
inline double Level2Trade::price() const {
  // @@protoc_insertion_point(field_get:models.Level2Trade.Price)
  return price_;
}
inline void Level2Trade::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:models.Level2Trade.Price)
}

// double Size = 3;
inline void Level2Trade::clear_size() {
  size_ = 0;
}
inline double Level2Trade::size() const {
  // @@protoc_insertion_point(field_get:models.Level2Trade.Size)
  return size_;
}
inline void Level2Trade::set_size(double value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:models.Level2Trade.Size)
}

// .models.OrderSide Side = 4;
inline void Level2Trade::clear_side() {
  side_ = 0;
}
inline ::models::OrderSide Level2Trade::side() const {
  // @@protoc_insertion_point(field_get:models.Level2Trade.Side)
  return static_cast< ::models::OrderSide >(side_);
}
inline void Level2Trade::set_side(::models::OrderSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:models.Level2Trade.Side)
}

// int64 Timestamp = 5;
inline void Level2Trade::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Level2Trade::timestamp() const {
  // @@protoc_insertion_point(field_get:models.Level2Trade.Timestamp)
  return timestamp_;
}
inline void Level2Trade::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:models.Level2Trade.Timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace models

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_marketdata_2eproto
