// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_rm.proto

#include "messages_rm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_5fgeneric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fgeneric_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageHeader;
}  // namespace protobuf_messages_5fgeneric_2eproto
namespace protobuf_messages_5frm_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5frm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotSwitchState_MessageBody;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5frm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AddRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5frm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CancelRequest;
}  // namespace protobuf_messages_5frm_2eproto
namespace protobuf_order_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_order_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CancelOrder;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_order_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NewOrder;
}  // namespace protobuf_order_2eproto
namespace models {
class RobotSwitchState_MessageBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotSwitchState_MessageBody>
      _instance;
} _RobotSwitchState_MessageBody_default_instance_;
class RobotSwitchStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotSwitchState>
      _instance;
} _RobotSwitchState_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class ApprovalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Approval>
      _instance;
} _Approval_default_instance_;
class AddRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddRequest>
      _instance;
} _AddRequest_default_instance_;
class ApprovedAddDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApprovedAdd>
      _instance;
} _ApprovedAdd_default_instance_;
class CancelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelRequest>
      _instance;
} _CancelRequest_default_instance_;
class ApprovedCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApprovedCancel>
      _instance;
} _ApprovedCancel_default_instance_;
}  // namespace models
namespace protobuf_messages_5frm_2eproto {
static void InitDefaultsRobotSwitchState_MessageBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_RobotSwitchState_MessageBody_default_instance_;
    new (ptr) ::models::RobotSwitchState_MessageBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::RobotSwitchState_MessageBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RobotSwitchState_MessageBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRobotSwitchState_MessageBody}, {}};

static void InitDefaultsRobotSwitchState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_RobotSwitchState_default_instance_;
    new (ptr) ::models::RobotSwitchState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::RobotSwitchState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RobotSwitchState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRobotSwitchState}, {
      &protobuf_messages_5fgeneric_2eproto::scc_info_MessageHeader.base,
      &protobuf_messages_5frm_2eproto::scc_info_RobotSwitchState_MessageBody.base,}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_Empty_default_instance_;
    new (ptr) ::models::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsApproval() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_Approval_default_instance_;
    new (ptr) ::models::Approval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::Approval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Approval =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApproval}, {}};

static void InitDefaultsAddRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_AddRequest_default_instance_;
    new (ptr) ::models::AddRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::AddRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddRequest}, {
      &protobuf_order_2eproto::scc_info_NewOrder.base,}};

static void InitDefaultsApprovedAdd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_ApprovedAdd_default_instance_;
    new (ptr) ::models::ApprovedAdd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::ApprovedAdd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApprovedAdd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApprovedAdd}, {
      &protobuf_messages_5frm_2eproto::scc_info_AddRequest.base,}};

static void InitDefaultsCancelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_CancelRequest_default_instance_;
    new (ptr) ::models::CancelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::CancelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CancelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCancelRequest}, {
      &protobuf_order_2eproto::scc_info_CancelOrder.base,}};

static void InitDefaultsApprovedCancel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::models::_ApprovedCancel_default_instance_;
    new (ptr) ::models::ApprovedCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::models::ApprovedCancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApprovedCancel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApprovedCancel}, {
      &protobuf_messages_5frm_2eproto::scc_info_CancelRequest.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RobotSwitchState_MessageBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotSwitchState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Approval.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApprovedAdd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApprovedCancel.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::RobotSwitchState_MessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::RobotSwitchState_MessageBody, robotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::RobotSwitchState_MessageBody, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::RobotSwitchState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::RobotSwitchState, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::RobotSwitchState, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::Approval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::Approval, approved_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::AddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::AddRequest, robotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::AddRequest, addingorder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::ApprovedAdd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::ApprovedAdd, addedrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::ApprovedAdd, approved_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::CancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::CancelRequest, robotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::CancelRequest, cancellingorder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::ApprovedCancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::ApprovedCancel, cancelledrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::models::ApprovedCancel, approved_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::models::RobotSwitchState_MessageBody)},
  { 7, -1, sizeof(::models::RobotSwitchState)},
  { 14, -1, sizeof(::models::Empty)},
  { 19, -1, sizeof(::models::Approval)},
  { 25, -1, sizeof(::models::AddRequest)},
  { 32, -1, sizeof(::models::ApprovedAdd)},
  { 39, -1, sizeof(::models::CancelRequest)},
  { 46, -1, sizeof(::models::ApprovedCancel)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_RobotSwitchState_MessageBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_RobotSwitchState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_Approval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_AddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_ApprovedAdd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_CancelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::models::_ApprovedCancel_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages_rm.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021messages_rm.proto\022\006models\032\026messages_ge"
      "neric.proto\032\013order.proto\"\262\001\n\020RobotSwitch"
      "State\022%\n\006Header\030\001 \001(\0132\025.models.MessageHe"
      "ader\0222\n\004Body\030\002 \001(\0132$.models.RobotSwitchS"
      "tate.MessageBody\032C\n\013MessageBody\022\017\n\007Robot"
      "ID\030\001 \001(\t\022#\n\006Status\030\002 \001(\0162\023.models.RobotS"
      "tatus\"\007\n\005Empty\"\034\n\010Approval\022\020\n\010approved\030\001"
      " \001(\010\"D\n\nAddRequest\022\017\n\007RobotID\030\001 \001(\t\022%\n\013A"
      "ddingOrder\030\002 \001(\0132\020.models.NewOrder\"I\n\013Ap"
      "provedAdd\022(\n\014AddedRequest\030\001 \001(\0132\022.models"
      ".AddRequest\022\020\n\010approved\030\002 \001(\010\"N\n\rCancelR"
      "equest\022\017\n\007RobotID\030\001 \001(\t\022,\n\017CancellingOrd"
      "er\030\002 \001(\0132\023.models.CancelOrder\"S\n\016Approve"
      "dCancel\022/\n\020CancelledRequest\030\001 \001(\0132\025.mode"
      "ls.CancelRequest\022\020\n\010approved\030\002 \001(\010*A\n\013Ro"
      "botStatus\022\013\n\007STOPPED\020\000\022\014\n\010LAUNCHED\020\001\022\n\n\006"
      "PAUSED\020\002\022\013\n\007CLOSING\020\0032\351\001\n\013RiskManager\0222\n"
      "\010AddOrder\022\022.models.AddRequest\032\020.models.A"
      "pproval\"\000\0222\n\nApproveAdd\022\023.models.Approve"
      "dAdd\032\r.models.Empty\"\000\0228\n\013CancelOrder\022\025.m"
      "odels.CancelRequest\032\020.models.Approval\"\000\022"
      "8\n\rApproveCancel\022\026.models.ApprovedCancel"
      "\032\r.models.Empty\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 905);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_rm.proto", &protobuf_RegisterTypes);
  ::protobuf_messages_5fgeneric_2eproto::AddDescriptors();
  ::protobuf_order_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_5frm_2eproto
namespace models {
const ::google::protobuf::EnumDescriptor* RobotStatus_descriptor() {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_5frm_2eproto::file_level_enum_descriptors[0];
}
bool RobotStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RobotSwitchState_MessageBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotSwitchState_MessageBody::kRobotIDFieldNumber;
const int RobotSwitchState_MessageBody::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotSwitchState_MessageBody::RobotSwitchState_MessageBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_RobotSwitchState_MessageBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.RobotSwitchState.MessageBody)
}
RobotSwitchState_MessageBody::RobotSwitchState_MessageBody(const RobotSwitchState_MessageBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robotid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robotid().size() > 0) {
    robotid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robotid_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:models.RobotSwitchState.MessageBody)
}

void RobotSwitchState_MessageBody::SharedCtor() {
  robotid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

RobotSwitchState_MessageBody::~RobotSwitchState_MessageBody() {
  // @@protoc_insertion_point(destructor:models.RobotSwitchState.MessageBody)
  SharedDtor();
}

void RobotSwitchState_MessageBody::SharedDtor() {
  robotid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotSwitchState_MessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RobotSwitchState_MessageBody::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotSwitchState_MessageBody& RobotSwitchState_MessageBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_RobotSwitchState_MessageBody.base);
  return *internal_default_instance();
}


void RobotSwitchState_MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:models.RobotSwitchState.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robotid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool RobotSwitchState_MessageBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.RobotSwitchState.MessageBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string RobotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robotid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robotid().data(), static_cast<int>(this->robotid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.RobotSwitchState.MessageBody.RobotID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.RobotStatus Status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::models::RobotStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.RobotSwitchState.MessageBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.RobotSwitchState.MessageBody)
  return false;
#undef DO_
}

void RobotSwitchState_MessageBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.RobotSwitchState.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robotid().data(), static_cast<int>(this->robotid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.RobotSwitchState.MessageBody.RobotID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robotid(), output);
  }

  // .models.RobotStatus Status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.RobotSwitchState.MessageBody)
}

::google::protobuf::uint8* RobotSwitchState_MessageBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.RobotSwitchState.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robotid().data(), static_cast<int>(this->robotid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.RobotSwitchState.MessageBody.RobotID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robotid(), target);
  }

  // .models.RobotStatus Status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.RobotSwitchState.MessageBody)
  return target;
}

size_t RobotSwitchState_MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.RobotSwitchState.MessageBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robotid());
  }

  // .models.RobotStatus Status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotSwitchState_MessageBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.RobotSwitchState.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotSwitchState_MessageBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotSwitchState_MessageBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.RobotSwitchState.MessageBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.RobotSwitchState.MessageBody)
    MergeFrom(*source);
  }
}

void RobotSwitchState_MessageBody::MergeFrom(const RobotSwitchState_MessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.RobotSwitchState.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robotid().size() > 0) {

    robotid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robotid_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RobotSwitchState_MessageBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.RobotSwitchState.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotSwitchState_MessageBody::CopyFrom(const RobotSwitchState_MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.RobotSwitchState.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotSwitchState_MessageBody::IsInitialized() const {
  return true;
}

void RobotSwitchState_MessageBody::Swap(RobotSwitchState_MessageBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotSwitchState_MessageBody::InternalSwap(RobotSwitchState_MessageBody* other) {
  using std::swap;
  robotid_.Swap(&other->robotid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RobotSwitchState_MessageBody::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotSwitchState::InitAsDefaultInstance() {
  ::models::_RobotSwitchState_default_instance_._instance.get_mutable()->header_ = const_cast< ::models::MessageHeader*>(
      ::models::MessageHeader::internal_default_instance());
  ::models::_RobotSwitchState_default_instance_._instance.get_mutable()->body_ = const_cast< ::models::RobotSwitchState_MessageBody*>(
      ::models::RobotSwitchState_MessageBody::internal_default_instance());
}
void RobotSwitchState::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotSwitchState::kHeaderFieldNumber;
const int RobotSwitchState::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotSwitchState::RobotSwitchState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_RobotSwitchState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.RobotSwitchState)
}
RobotSwitchState::RobotSwitchState(const RobotSwitchState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::models::MessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::models::RobotSwitchState_MessageBody(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.RobotSwitchState)
}

void RobotSwitchState::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

RobotSwitchState::~RobotSwitchState() {
  // @@protoc_insertion_point(destructor:models.RobotSwitchState)
  SharedDtor();
}

void RobotSwitchState::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void RobotSwitchState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RobotSwitchState::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotSwitchState& RobotSwitchState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_RobotSwitchState.base);
  return *internal_default_instance();
}


void RobotSwitchState::Clear() {
// @@protoc_insertion_point(message_clear_start:models.RobotSwitchState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool RobotSwitchState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.RobotSwitchState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.MessageHeader Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.RobotSwitchState.MessageBody Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.RobotSwitchState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.RobotSwitchState)
  return false;
#undef DO_
}

void RobotSwitchState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.RobotSwitchState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .models.RobotSwitchState.MessageBody Body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.RobotSwitchState)
}

::google::protobuf::uint8* RobotSwitchState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.RobotSwitchState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .models.RobotSwitchState.MessageBody Body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.RobotSwitchState)
  return target;
}

size_t RobotSwitchState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.RobotSwitchState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.MessageHeader Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .models.RobotSwitchState.MessageBody Body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotSwitchState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.RobotSwitchState)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotSwitchState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotSwitchState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.RobotSwitchState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.RobotSwitchState)
    MergeFrom(*source);
  }
}

void RobotSwitchState::MergeFrom(const RobotSwitchState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.RobotSwitchState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::models::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_body()) {
    mutable_body()->::models::RobotSwitchState_MessageBody::MergeFrom(from.body());
  }
}

void RobotSwitchState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.RobotSwitchState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotSwitchState::CopyFrom(const RobotSwitchState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.RobotSwitchState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotSwitchState::IsInitialized() const {
  return true;
}

void RobotSwitchState::Swap(RobotSwitchState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotSwitchState::InternalSwap(RobotSwitchState* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RobotSwitchState::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:models.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:models.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:models.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:models.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Approval::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Approval::kApprovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Approval::Approval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_Approval.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.Approval)
}
Approval::Approval(const Approval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  approved_ = from.approved_;
  // @@protoc_insertion_point(copy_constructor:models.Approval)
}

void Approval::SharedCtor() {
  approved_ = false;
}

Approval::~Approval() {
  // @@protoc_insertion_point(destructor:models.Approval)
  SharedDtor();
}

void Approval::SharedDtor() {
}

void Approval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Approval::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Approval& Approval::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_Approval.base);
  return *internal_default_instance();
}


void Approval::Clear() {
// @@protoc_insertion_point(message_clear_start:models.Approval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  approved_ = false;
  _internal_metadata_.Clear();
}

bool Approval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.Approval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool approved = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &approved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.Approval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.Approval)
  return false;
#undef DO_
}

void Approval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.Approval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool approved = 1;
  if (this->approved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->approved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.Approval)
}

::google::protobuf::uint8* Approval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.Approval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool approved = 1;
  if (this->approved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->approved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.Approval)
  return target;
}

size_t Approval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.Approval)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool approved = 1;
  if (this->approved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Approval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.Approval)
  GOOGLE_DCHECK_NE(&from, this);
  const Approval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Approval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.Approval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.Approval)
    MergeFrom(*source);
  }
}

void Approval::MergeFrom(const Approval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.Approval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.approved() != 0) {
    set_approved(from.approved());
  }
}

void Approval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.Approval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Approval::CopyFrom(const Approval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.Approval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Approval::IsInitialized() const {
  return true;
}

void Approval::Swap(Approval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Approval::InternalSwap(Approval* other) {
  using std::swap;
  swap(approved_, other->approved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Approval::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddRequest::InitAsDefaultInstance() {
  ::models::_AddRequest_default_instance_._instance.get_mutable()->addingorder_ = const_cast< ::models::NewOrder*>(
      ::models::NewOrder::internal_default_instance());
}
void AddRequest::clear_addingorder() {
  if (GetArenaNoVirtual() == NULL && addingorder_ != NULL) {
    delete addingorder_;
  }
  addingorder_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRequest::kRobotIDFieldNumber;
const int AddRequest::kAddingOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRequest::AddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_AddRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.AddRequest)
}
AddRequest::AddRequest(const AddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robotid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robotid().size() > 0) {
    robotid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robotid_);
  }
  if (from.has_addingorder()) {
    addingorder_ = new ::models::NewOrder(*from.addingorder_);
  } else {
    addingorder_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.AddRequest)
}

void AddRequest::SharedCtor() {
  robotid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addingorder_ = NULL;
}

AddRequest::~AddRequest() {
  // @@protoc_insertion_point(destructor:models.AddRequest)
  SharedDtor();
}

void AddRequest::SharedDtor() {
  robotid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete addingorder_;
}

void AddRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddRequest::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRequest& AddRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_AddRequest.base);
  return *internal_default_instance();
}


void AddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:models.AddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robotid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && addingorder_ != NULL) {
    delete addingorder_;
  }
  addingorder_ = NULL;
  _internal_metadata_.Clear();
}

bool AddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.AddRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string RobotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robotid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robotid().data(), static_cast<int>(this->robotid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.AddRequest.RobotID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.NewOrder AddingOrder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addingorder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.AddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.AddRequest)
  return false;
#undef DO_
}

void AddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.AddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robotid().data(), static_cast<int>(this->robotid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.AddRequest.RobotID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robotid(), output);
  }

  // .models.NewOrder AddingOrder = 2;
  if (this->has_addingorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_addingorder(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.AddRequest)
}

::google::protobuf::uint8* AddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.AddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robotid().data(), static_cast<int>(this->robotid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.AddRequest.RobotID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robotid(), target);
  }

  // .models.NewOrder AddingOrder = 2;
  if (this->has_addingorder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_addingorder(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.AddRequest)
  return target;
}

size_t AddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.AddRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robotid());
  }

  // .models.NewOrder AddingOrder = 2;
  if (this->has_addingorder()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addingorder_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.AddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.AddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.AddRequest)
    MergeFrom(*source);
  }
}

void AddRequest::MergeFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.AddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robotid().size() > 0) {

    robotid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robotid_);
  }
  if (from.has_addingorder()) {
    mutable_addingorder()->::models::NewOrder::MergeFrom(from.addingorder());
  }
}

void AddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRequest::CopyFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRequest::IsInitialized() const {
  return true;
}

void AddRequest::Swap(AddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRequest::InternalSwap(AddRequest* other) {
  using std::swap;
  robotid_.Swap(&other->robotid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(addingorder_, other->addingorder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddRequest::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApprovedAdd::InitAsDefaultInstance() {
  ::models::_ApprovedAdd_default_instance_._instance.get_mutable()->addedrequest_ = const_cast< ::models::AddRequest*>(
      ::models::AddRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApprovedAdd::kAddedRequestFieldNumber;
const int ApprovedAdd::kApprovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApprovedAdd::ApprovedAdd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_ApprovedAdd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.ApprovedAdd)
}
ApprovedAdd::ApprovedAdd(const ApprovedAdd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addedrequest()) {
    addedrequest_ = new ::models::AddRequest(*from.addedrequest_);
  } else {
    addedrequest_ = NULL;
  }
  approved_ = from.approved_;
  // @@protoc_insertion_point(copy_constructor:models.ApprovedAdd)
}

void ApprovedAdd::SharedCtor() {
  ::memset(&addedrequest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&approved_) -
      reinterpret_cast<char*>(&addedrequest_)) + sizeof(approved_));
}

ApprovedAdd::~ApprovedAdd() {
  // @@protoc_insertion_point(destructor:models.ApprovedAdd)
  SharedDtor();
}

void ApprovedAdd::SharedDtor() {
  if (this != internal_default_instance()) delete addedrequest_;
}

void ApprovedAdd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApprovedAdd::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApprovedAdd& ApprovedAdd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_ApprovedAdd.base);
  return *internal_default_instance();
}


void ApprovedAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:models.ApprovedAdd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && addedrequest_ != NULL) {
    delete addedrequest_;
  }
  addedrequest_ = NULL;
  approved_ = false;
  _internal_metadata_.Clear();
}

bool ApprovedAdd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.ApprovedAdd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.AddRequest AddedRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addedrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool approved = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &approved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.ApprovedAdd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.ApprovedAdd)
  return false;
#undef DO_
}

void ApprovedAdd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.ApprovedAdd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.AddRequest AddedRequest = 1;
  if (this->has_addedrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_addedrequest(), output);
  }

  // bool approved = 2;
  if (this->approved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->approved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.ApprovedAdd)
}

::google::protobuf::uint8* ApprovedAdd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.ApprovedAdd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.AddRequest AddedRequest = 1;
  if (this->has_addedrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_addedrequest(), deterministic, target);
  }

  // bool approved = 2;
  if (this->approved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->approved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.ApprovedAdd)
  return target;
}

size_t ApprovedAdd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.ApprovedAdd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.AddRequest AddedRequest = 1;
  if (this->has_addedrequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addedrequest_);
  }

  // bool approved = 2;
  if (this->approved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApprovedAdd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.ApprovedAdd)
  GOOGLE_DCHECK_NE(&from, this);
  const ApprovedAdd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApprovedAdd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.ApprovedAdd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.ApprovedAdd)
    MergeFrom(*source);
  }
}

void ApprovedAdd::MergeFrom(const ApprovedAdd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.ApprovedAdd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_addedrequest()) {
    mutable_addedrequest()->::models::AddRequest::MergeFrom(from.addedrequest());
  }
  if (from.approved() != 0) {
    set_approved(from.approved());
  }
}

void ApprovedAdd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.ApprovedAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApprovedAdd::CopyFrom(const ApprovedAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.ApprovedAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApprovedAdd::IsInitialized() const {
  return true;
}

void ApprovedAdd::Swap(ApprovedAdd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApprovedAdd::InternalSwap(ApprovedAdd* other) {
  using std::swap;
  swap(addedrequest_, other->addedrequest_);
  swap(approved_, other->approved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApprovedAdd::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelRequest::InitAsDefaultInstance() {
  ::models::_CancelRequest_default_instance_._instance.get_mutable()->cancellingorder_ = const_cast< ::models::CancelOrder*>(
      ::models::CancelOrder::internal_default_instance());
}
void CancelRequest::clear_cancellingorder() {
  if (GetArenaNoVirtual() == NULL && cancellingorder_ != NULL) {
    delete cancellingorder_;
  }
  cancellingorder_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelRequest::kRobotIDFieldNumber;
const int CancelRequest::kCancellingOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelRequest::CancelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_CancelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.CancelRequest)
}
CancelRequest::CancelRequest(const CancelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robotid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robotid().size() > 0) {
    robotid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robotid_);
  }
  if (from.has_cancellingorder()) {
    cancellingorder_ = new ::models::CancelOrder(*from.cancellingorder_);
  } else {
    cancellingorder_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:models.CancelRequest)
}

void CancelRequest::SharedCtor() {
  robotid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cancellingorder_ = NULL;
}

CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:models.CancelRequest)
  SharedDtor();
}

void CancelRequest::SharedDtor() {
  robotid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cancellingorder_;
}

void CancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CancelRequest::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelRequest& CancelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_CancelRequest.base);
  return *internal_default_instance();
}


void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:models.CancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robotid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cancellingorder_ != NULL) {
    delete cancellingorder_;
  }
  cancellingorder_ = NULL;
  _internal_metadata_.Clear();
}

bool CancelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.CancelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string RobotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robotid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robotid().data(), static_cast<int>(this->robotid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "models.CancelRequest.RobotID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .models.CancelOrder CancellingOrder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cancellingorder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.CancelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.CancelRequest)
  return false;
#undef DO_
}

void CancelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.CancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robotid().data(), static_cast<int>(this->robotid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.CancelRequest.RobotID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robotid(), output);
  }

  // .models.CancelOrder CancellingOrder = 2;
  if (this->has_cancellingorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cancellingorder(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.CancelRequest)
}

::google::protobuf::uint8* CancelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.CancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robotid().data(), static_cast<int>(this->robotid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "models.CancelRequest.RobotID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robotid(), target);
  }

  // .models.CancelOrder CancellingOrder = 2;
  if (this->has_cancellingorder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cancellingorder(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.CancelRequest)
  return target;
}

size_t CancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.CancelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RobotID = 1;
  if (this->robotid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robotid());
  }

  // .models.CancelOrder CancellingOrder = 2;
  if (this->has_cancellingorder()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cancellingorder_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.CancelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.CancelRequest)
    MergeFrom(*source);
  }
}

void CancelRequest::MergeFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robotid().size() > 0) {

    robotid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robotid_);
  }
  if (from.has_cancellingorder()) {
    mutable_cancellingorder()->::models::CancelOrder::MergeFrom(from.cancellingorder());
  }
}

void CancelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelRequest::IsInitialized() const {
  return true;
}

void CancelRequest::Swap(CancelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelRequest::InternalSwap(CancelRequest* other) {
  using std::swap;
  robotid_.Swap(&other->robotid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cancellingorder_, other->cancellingorder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelRequest::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApprovedCancel::InitAsDefaultInstance() {
  ::models::_ApprovedCancel_default_instance_._instance.get_mutable()->cancelledrequest_ = const_cast< ::models::CancelRequest*>(
      ::models::CancelRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApprovedCancel::kCancelledRequestFieldNumber;
const int ApprovedCancel::kApprovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApprovedCancel::ApprovedCancel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5frm_2eproto::scc_info_ApprovedCancel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:models.ApprovedCancel)
}
ApprovedCancel::ApprovedCancel(const ApprovedCancel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cancelledrequest()) {
    cancelledrequest_ = new ::models::CancelRequest(*from.cancelledrequest_);
  } else {
    cancelledrequest_ = NULL;
  }
  approved_ = from.approved_;
  // @@protoc_insertion_point(copy_constructor:models.ApprovedCancel)
}

void ApprovedCancel::SharedCtor() {
  ::memset(&cancelledrequest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&approved_) -
      reinterpret_cast<char*>(&cancelledrequest_)) + sizeof(approved_));
}

ApprovedCancel::~ApprovedCancel() {
  // @@protoc_insertion_point(destructor:models.ApprovedCancel)
  SharedDtor();
}

void ApprovedCancel::SharedDtor() {
  if (this != internal_default_instance()) delete cancelledrequest_;
}

void ApprovedCancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApprovedCancel::descriptor() {
  ::protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApprovedCancel& ApprovedCancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5frm_2eproto::scc_info_ApprovedCancel.base);
  return *internal_default_instance();
}


void ApprovedCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:models.ApprovedCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cancelledrequest_ != NULL) {
    delete cancelledrequest_;
  }
  cancelledrequest_ = NULL;
  approved_ = false;
  _internal_metadata_.Clear();
}

bool ApprovedCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:models.ApprovedCancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .models.CancelRequest CancelledRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cancelledrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool approved = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &approved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:models.ApprovedCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:models.ApprovedCancel)
  return false;
#undef DO_
}

void ApprovedCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:models.ApprovedCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.CancelRequest CancelledRequest = 1;
  if (this->has_cancelledrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cancelledrequest(), output);
  }

  // bool approved = 2;
  if (this->approved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->approved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:models.ApprovedCancel)
}

::google::protobuf::uint8* ApprovedCancel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:models.ApprovedCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .models.CancelRequest CancelledRequest = 1;
  if (this->has_cancelledrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cancelledrequest(), deterministic, target);
  }

  // bool approved = 2;
  if (this->approved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->approved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:models.ApprovedCancel)
  return target;
}

size_t ApprovedCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:models.ApprovedCancel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .models.CancelRequest CancelledRequest = 1;
  if (this->has_cancelledrequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cancelledrequest_);
  }

  // bool approved = 2;
  if (this->approved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApprovedCancel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:models.ApprovedCancel)
  GOOGLE_DCHECK_NE(&from, this);
  const ApprovedCancel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApprovedCancel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:models.ApprovedCancel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:models.ApprovedCancel)
    MergeFrom(*source);
  }
}

void ApprovedCancel::MergeFrom(const ApprovedCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:models.ApprovedCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cancelledrequest()) {
    mutable_cancelledrequest()->::models::CancelRequest::MergeFrom(from.cancelledrequest());
  }
  if (from.approved() != 0) {
    set_approved(from.approved());
  }
}

void ApprovedCancel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:models.ApprovedCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApprovedCancel::CopyFrom(const ApprovedCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:models.ApprovedCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApprovedCancel::IsInitialized() const {
  return true;
}

void ApprovedCancel::Swap(ApprovedCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApprovedCancel::InternalSwap(ApprovedCancel* other) {
  using std::swap;
  swap(cancelledrequest_, other->cancelledrequest_);
  swap(approved_, other->approved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApprovedCancel::GetMetadata() const {
  protobuf_messages_5frm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5frm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace models
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::RobotSwitchState_MessageBody* Arena::CreateMaybeMessage< ::models::RobotSwitchState_MessageBody >(Arena* arena) {
  return Arena::CreateInternal< ::models::RobotSwitchState_MessageBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::RobotSwitchState* Arena::CreateMaybeMessage< ::models::RobotSwitchState >(Arena* arena) {
  return Arena::CreateInternal< ::models::RobotSwitchState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::Empty* Arena::CreateMaybeMessage< ::models::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::models::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::Approval* Arena::CreateMaybeMessage< ::models::Approval >(Arena* arena) {
  return Arena::CreateInternal< ::models::Approval >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::AddRequest* Arena::CreateMaybeMessage< ::models::AddRequest >(Arena* arena) {
  return Arena::CreateInternal< ::models::AddRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::ApprovedAdd* Arena::CreateMaybeMessage< ::models::ApprovedAdd >(Arena* arena) {
  return Arena::CreateInternal< ::models::ApprovedAdd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::CancelRequest* Arena::CreateMaybeMessage< ::models::CancelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::models::CancelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::models::ApprovedCancel* Arena::CreateMaybeMessage< ::models::ApprovedCancel >(Arena* arena) {
  return Arena::CreateInternal< ::models::ApprovedCancel >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
